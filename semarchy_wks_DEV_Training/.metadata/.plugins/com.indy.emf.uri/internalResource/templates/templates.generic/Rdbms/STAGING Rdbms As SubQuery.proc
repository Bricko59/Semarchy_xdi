<?xml version="1.0" encoding="UTF-8"?>
<proc:process xmlns:UUID="java.util.UUID" xmlns:common="http://exslt.org/common" xmlns:mdj="java:com.indy.xsl.global.Functions" xmlns:proc="http://www.example.org/proc" xmlns:saxon="http://saxon.sf.net/" id="_v8JEkTNEEeSH5LKy1U4ptg" description="This template is used to generate a subquery based on the columns provided on the stage.&#xD;&#xA;The subquery represents all the source data of the stage and will be used in other templates to load work or target tables.&#xD;&#xA;This offers the possibility to represent and use easily a set of data through a subquery, with the advantage of retrieving data directly from the sources with a query without going through work tables or views.&#xD;&#xA;&#xD;&#xA;Refer to the description of each Parameter for more information.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;History:&#xD;&#xA;16/06/2020&#x9;New Parameters 'Unlock Cdc Table' and 'Lock Cdc Table'&#xD;&#xA;16/06/2020&#x9;New Parameter 'Cdc Subscriber'&#xD;&#xA;16/06/2020&#x9;Add support for CDC Sources&#xD;&#xA;29/02/2016   Initialize template history" isBeginAction="true" nbCycles="-1" toleratedError="false">
  <parameter id="_pUAQ0DnEEeS0Vbf-U-V7Kg" description="If true, a DISTINCT statement will be added on the generated subquery.&#xD;&#xA;This is used to avoid having duplicates." name="useDistinct" type="Boolean" value="false"/>
  <parameter id="_9cCnYK7sEeqGH6AaH3PDiA" name="cdcSubscriber" type="String"/>
  <parameter id="_AzmigLCBEeqAJL64qj9Gxw" description="When a source table is used as CDC a lock is performed on it. It makes the changed data available in the Mapping.&#xD;&#xA;If set to false, the Lock must have been performed as part of a previous Mapping." name="lockCdcTable" type="Boolean" value="true"/>
  <parameter id="_Azt3QLCBEeqAJL64qj9Gxw" description="When a source table is used as CDC an unlock is performed on it after processing. It marks the changed data as consumed.&#xD;&#xA;If set to false, the Unlock must be performed as part of an upcoming Mapping." name="unlockCdcTable" type="Boolean" value="true"/>
  <subProcess id="_v8JEkzNEEeSH5LKy1U4ptg" name="STAGING">
    <link id="_Y1ZaoK7sEeqGH6AaH3PDiA" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_YizOwK7sEeqGH6AaH3PDiA?fileId=_v8JEkTNEEeSH5LKy1U4ptg$type=proc$name=CLEANUP?"/>
    <parameter id="_v8JElTNEEeSH5LKy1U4ptg" name="TPL_STEP" type="String" value="Integration.BeforeControl"/>
    <actionCode id="_3H_nQDNEEeSH5LKy1U4ptg" isBeginAction="false" name="Register Sub Query" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.EmptyActionCodeI">
      <code>%xsl{&#xD;
&lt;xsl:variable name=&quot;sets&quot;>&#xD;
&lt;xsl:for-each select=&quot;if (count($REF/tech:sourceSets())=0) then '' else $REF/tech:sourceSets() &quot;>&#xD;
&lt;set name=&quot;{.}&quot;>&#xD;
&lt;xsl:variable name=&quot;sourceSetName&quot; select=&quot;.&quot;/>&#xD;
&lt;xsl:variable name=&quot;columns&quot; select=&quot;$REF/ref:columns($sourceSetName)&quot;/>&#xD;
select		%x{if (md:paramValue($this,'useDistinct')='true') then 'DISTINCT ' else ''}x%&#xD;
	%x{md:patternList($columns,'[expression] AS [workName]', ',\n\t')}x%&#xD;
	%x{if($REF/tech:hasCdcSource()) then if($REF/tech:hasCdc($sourceSetName)) then ', CDC_CHANGE_TYPE' else ', ''I'' AS CDC_CHANGE_TYPE' else ''}x%&#xD;
from	%x{$REF/tech:fromPart($sourceSetName)}x%&#xD;
where	(1=1)%xsl{&#xD;
%x{$REF/tech:joinPart($sourceSetName)}x%&#xD;
%x{$REF/tech:filterPart($sourceSetName)}x%&#xD;
%x{$REF/tech:cdcFilterPart2($this,$sourceSetName)}x%&#xD;
%x{$REF/tech:groupByPart($sourceSetName)}x%&#xD;
%x{$REF/tech:havingPart($sourceSetName)}x%}xsl%&lt;/set>&#xD;
&lt;/xsl:for-each>&#xD;
&lt;/xsl:variable>&#xD;
&lt;xsl:variable name=&quot;query&quot;>&#xD;
%x{md:resolveSetExpression($sets/set,$REF/@setExpression)}%&#xD;
&lt;/xsl:variable>&#xD;
%x{md:setStagingPoint($REF/@id,$query,'query')}x%&#xD;
%x{$query}x%&#xD;
}xsl%&#xD;
&#xD;
</code>
    </actionCode>
    <subProcess id="_uW8Z8LCAEeqAJL64qj9Gxw" generationCondition="not(md:paramValue($this, 'lockCdcTable')='false')" isBeginAction="false" name="Lock CDC" nbCycles="-1" repetitionMode="Parallelize" repetitionQuery="$sourceSets/sourceSet" repetitionVariableName="CUR_SOURCE_SET" toleratedError="false">
      <actionCode id="_uW8Z8rCAEeqAJL64qj9Gxw" generationCondition="" isBeginAction="false" name="Lock of CDC table" nbCycles="-1" repetitionMode="Parallelize" repetitionQuery="$REF/ref:from($CUR_SOURCE_SET/@name)[tech:isCdc()]" repetitionVariableName="CDC" toleratedError="false" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
        <parameter id="_uW8Z87CAEeqAJL64qj9Gxw" name="SQL_CONNECTION" type="String" value="%sourceConnection{$REF}%"/>
        <parameter id="_uW8Z9LCAEeqAJL64qj9Gxw" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
        <code>update 	%x{$CDC/ref:target()/tech:cdcTablePath()}x%&#xD;
set 	CDC_CONSUMMATION = '1'&#xD;
where	(1=1)&#xD;
%x{$CDC/tech:cdcFilterPart2($this)}x%</code>
      </actionCode>
    </subProcess>
    <templateType>EXECUTE</templateType>
    <xslVariable id="_uWzQALCAEeqAJL64qj9Gxw" code="%xsl{&#xD;&#xA;&lt;xsl:for-each select=&quot;if (count($REF/tech:sourceSets())=0) then '' else $REF/tech:sourceSets() &quot;>&#xD;&#xA;&lt;xsl:variable name=&quot;sourceSetName&quot; select=&quot;.&quot; />&#xD;&#xA;&lt;xsl:if test=&quot;exists($REF/ref:from($sourceSetName)[tech:isCdc()])&quot;>&#xD;&#xA;&lt;sourceSet name=&quot;{$sourceSetName}&quot;/>&#xD;&#xA;&lt;/xsl:if>&#xD;&#xA;&lt;/xsl:for-each>&#xD;&#xA;}xsl%" name="sourceSets" type="xsl"/>
  </subProcess>
  <subProcess id="_YizOwK7sEeqGH6AaH3PDiA" generationCondition="" name="CLEANUP">
    <subProcess id="_6NysIbCAEeqAJL64qj9Gxw" generationCondition="not(md:paramValue($this, 'unlockCdcTable')='false')" isBeginAction="false" name="Unlock CDC" nbCycles="-1" repetitionMode="Parallelize" repetitionQuery="$sourceSets/sourceSet" repetitionVariableName="CUR_SOURCE_SET" toleratedError="false">
      <actionCode id="_6NysIrCAEeqAJL64qj9Gxw" generationCondition="" isBeginAction="false" name="Unlock of CDC table" nbCycles="-1" repetitionMode="Parallelize" repetitionQuery="$REF/ref:from($CUR_SOURCE_SET/@name)[tech:isCdc()]" repetitionVariableName="CDC" toleratedError="false" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
        <parameter id="_6NysI7CAEeqAJL64qj9Gxw" name="SQL_CONNECTION" type="String" value="%sourceConnection{$REF}%"/>
        <parameter id="_6NysJLCAEeqAJL64qj9Gxw" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
        <code>%x{$CDC/ref:target()/tech:cdcDeleteDml()}x%&#xD;
Where	CDC_CONSUMMATION = '1'&#xD;
%x{$CDC/tech:cdcFilterPart2($this)}x%</code>
      </actionCode>
    </subProcess>
    <templateType>CLEANUP</templateType>
    <xslVariable id="_6NysILCAEeqAJL64qj9Gxw" code="%xsl{&#xD;&#xA;&lt;xsl:for-each select=&quot;if (count($REF/tech:sourceSets())=0) then '' else $REF/tech:sourceSets() &quot;>&#xD;&#xA;&lt;xsl:variable name=&quot;sourceSetName&quot; select=&quot;.&quot; />&#xD;&#xA;&lt;xsl:if test=&quot;exists($REF/ref:from($sourceSetName)[tech:isCdc()])&quot;>&#xD;&#xA;&lt;sourceSet name=&quot;{$sourceSetName}&quot;/>&#xD;&#xA;&lt;/xsl:if>&#xD;&#xA;&lt;/xsl:for-each>&#xD;&#xA;}xsl%" name="sourceSets" type="xsl"/>
  </subProcess>
  <templateType>I-TP.RDBMS</templateType>
</proc:process>