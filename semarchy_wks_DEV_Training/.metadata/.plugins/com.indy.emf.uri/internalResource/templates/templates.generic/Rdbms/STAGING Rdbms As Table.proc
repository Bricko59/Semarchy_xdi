<?xml version="1.0" encoding="UTF-8"?>
<proc:process xmlns:UUID="java.util.UUID" xmlns:common="http://exslt.org/common" xmlns:mdj="java:com.indy.xsl.global.Functions" xmlns:proc="http://www.example.org/proc" xmlns:saxon="http://saxon.sf.net/" id="_rdD5MTRMEeSQ37GXUClEnA" description="This template is used to create a stage table on the database schema provided.&#xD;&#xA;The table is created from the columns provided on the stage, and populated from the sources.&#xD;&#xA;This offers the possibility to have a staging area to store data during an integration process.&#xD;&#xA;&#xD;&#xA;Refer to the description of each Parameter for more information.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;History:&#xD;&#xA;16/06/2020&#x9;New Parameters 'Unlock Cdc Table' and 'Lock Cdc Table'&#xD;&#xA;16/06/2020&#x9;New Parameter 'Cdc Subscriber'&#xD;&#xA;16/06/2020&#x9;Add support for CDC Sources&#xD;&#xA;25/05/2020&#x9;Add support for default storage clauses defined in the Metadata&#xD;&#xA;26/06/2018&#x9;Reorganize the parameters display order&#xD;&#xA;06/02/2017  Add support for custom temporary object name&#xD;&#xA;26/02/2016  Add transactional options to the template&#xD;&#xA;26/02/2016  Initialize template history" isBeginAction="true" nbCycles="-1" toleratedError="false">
  <parameter id="_pon18DnEEeS0Vbf-U-V7Kg" description="If true, a DISTINCT statement will be added on the query inserting data in the stage table.&#xD;&#xA;This is used to avoid having duplicates in the table." name="useDistinct" type="Boolean" value="false"/>
  <parameter id="_rdD5MjRMEeSQ37GXUClEnA" description="If true, the temporary objects created during staging are removed at the end of the process." name="cleanTemporaryObjects " type="Boolean" value="true"/>
  <parameter id="_injo4NSaEeWbPtaFLvZhPQ" description="If true, the operations on the work tables will be executed in a dedicated transaction.&#xD;&#xA;This is useful for instance if one of the source tables has been loaded in a previous and uncommitted Mapping.&#xD;&#xA;In this case, it is necessary to populate the work tables within the same transaction so that the data loaded as part of this previous Mapping are visible.&#xD;&#xA;&#xD;&#xA;If false, each statement on the work tables uses an Autocommit transaction." name="transactionalModeOnWorkTables" type="Boolean" value="false"/>
  <parameter id="_AnY8wOx5EeaHab5deMqBaw" description="Set this option to true to use the name of the Stage to create the temporary object.&#xD;&#xA;This can be useful to create a named table on the fly using a Stage and reuse it afterwards." name="useStageNameForTemporaryObjectName" type="Boolean" value="false"/>
  <parameter id="_37_dQNrkEeWYjZegBSkYwA" description="If true, the transactions are committed at the end of the staging.&#xD;&#xA;Please note that this option is taken into acount only if TransactionalModeOnWorkTables is set to true." name="commitTransaction" type="Boolean" value="false"/>
  <parameter id="_pgXTwNSaEeWbPtaFLvZhPQ" description="Name of the transaction when Transaction Mode is set to true." name="transactionName" type="String" value="T1"/>
  <parameter id="_FkCWMLCCEeqAJL64qj9Gxw" description="When a source table is used as CDC a lock is performed on it. It makes the changed data available in the Mapping.&#xD;&#xA;If set to false, the Lock must have been performed as part of a previous Mapping." name="lockCdcTable" type="Boolean" value="true"/>
  <parameter id="_FkSN0LCCEeqAJL64qj9Gxw" description="When a source table is used as CDC an unlock is performed on it after processing. It marks the changed data as consumed.&#xD;&#xA;If set to false, the Unlock must be performed as part of an upcoming Mapping." name="unlockCdcTable" type="Boolean" value="true"/>
  <parameter id="_FkSN0bCCEeqAJL64qj9Gxw" description="CDC Subscriber to use when CDC has been enabled on a source table." name="cdcSubscriber" type="String"/>
  <subProcess id="_rdD5MzRMEeSQ37GXUClEnA" name="STAGING">
    <link id="_rdD5NDRMEeSQ37GXUClEnA" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_rdD5OTRMEeSQ37GXUClEnA?fileId=_rdD5MTRMEeSQ37GXUClEnA$type=proc$name=CLEAN_INTEGRATION?"/>
    <actionCode id="_rdD5NTRMEeSQ37GXUClEnA" generationCondition="" isBeginAction="false" name="Creation of staging" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
      <link id="_s0rxoNrkEeWYjZegBSkYwA" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_skc9QNrkEeWYjZegBSkYwA"/>
      <parameter id="_rdD5NjRMEeSQ37GXUClEnA" name="SQL_CONNECTION" type="String" value="%targetConnection{$REF}%"/>
      <parameter id="_rdD5NzRMEeSQ37GXUClEnA" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
      <parameter id="_rdD5ODRMEeSQ37GXUClEnA" name="SQL_TRANSACTION_TYPE" type="String" value="%x{if (md:paramValue($this,'transactionalModeOnWorkTables')='true') then 'NOCOMMIT' else 'AUTOCOMMIT' }x%"/>
      <parameter id="_3jJ5ENSaEeWbPtaFLvZhPQ" name="SQL_TRANSACTION_NAME" type="String" value="%x{if (md:paramValue($this,'transactionalModeOnWorkTables')='true') then md:paramValue($this,'transactionName') else '' }x%"/>
      <code>%xsl{Create table %x{$stageTableName}x%
%x{$REF/ref:target()/ref:schema()/tech:defaultTempTableStorageClause()}x%
AS
&lt;xsl:variable name=&quot;sets&quot;>
&lt;xsl:for-each select=&quot;if (count($REF/tech:sourceSets())=0) then '' else $REF/tech:sourceSets() &quot;>
&lt;set name=&quot;{.}&quot;>
&lt;xsl:variable name=&quot;sourceSetName&quot; select=&quot;.&quot;/>
&lt;xsl:variable name=&quot;columns&quot; select=&quot;$REF/ref:columns($sourceSetName)&quot;/>
select		%x{if (md:paramValue($this,'useDistinct')='true') then 'DISTINCT ' else ''}x%
	%x{md:patternList($columns,'[expression] AS [workName]', ',\n\t')}x%
	%x{if($REF/tech:hasCdcSource()) then if($REF/tech:hasCdc($sourceSetName)) then ', CDC_CHANGE_TYPE' else ', ''I'' AS CDC_CHANGE_TYPE' else ''}x%
from	%x{$REF/tech:fromPart($sourceSetName)}x%
where	(1=1)%xsl{
%x{$REF/tech:joinPart($sourceSetName)}x%
%x{$REF/tech:filterPart($sourceSetName)}x%
%x{$REF/tech:cdcFilterPart2($this,$sourceSetName)}x%
%x{$REF/tech:groupByPart($sourceSetName)}x%
%x{$REF/tech:havingPart($sourceSetName)}x%}xsl%&lt;/set>
&lt;/xsl:for-each>
&lt;/xsl:variable>
%x{md:resolveSetExpression($sets/set,$REF/@setExpression)}%
}xsl%

%x{if(md:paramValue($this,'useStageNameForTemporaryObjectName') = 'true')
	then md:setStagingPoint($REF/@id,concat('select * from ', $stageTableName),'query')
	else '' 
}x%
</code>
    </actionCode>
    <actionCode id="_w4b8wDRMEeSQ37GXUClEnA" generationCondition="" isBeginAction="false" name="Drop table stagging" nbCycles="-1" toleratedError="true" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
      <link id="_xPQhUDRMEeSQ37GXUClEnA" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_CPy-QLCCEeqAJL64qj9Gxw?fileId=_rdD5MTRMEeSQ37GXUClEnA$type=proc$name=Lock%20CDC?"/>
      <parameter id="_w4b8wTRMEeSQ37GXUClEnA" name="SQL_CONNECTION" type="String" value="%targetConnection{$REF}%"/>
      <parameter id="_w4b8wjRMEeSQ37GXUClEnA" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
      <parameter id="_w4b8wzRMEeSQ37GXUClEnA" name="SQL_TRANSACTION_TYPE" type="String" value="%x{if (md:paramValue($this,'transactionalModeOnWorkTables')='true') then 'NOCOMMIT' else 'AUTOCOMMIT' }x%"/>
      <parameter id="_3Aep0NSaEeWbPtaFLvZhPQ" name="SQL_TRANSACTION_NAME" type="String" value="%x{if (md:paramValue($this,'transactionalModeOnWorkTables')='true') then md:paramValue($this,'transactionName') else '' }x%"/>
      <code>%x{if($REF/ref:target()/tech:dropTableIfExists()) then $REF/ref:target()/tech:dropTableIfExists($stageTableName) else concat('drop table ',$stageTableName)}x%</code>
    </actionCode>
    <actionCode id="_w4gOMDRMEeSQ37GXUClEnA" generationCondition="" enable="true" isBeginAction="false" name="Drop view staging" nbCycles="-1" toleratedError="true" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
      <link id="_w4gOMTRMEeSQ37GXUClEnA" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_w4b8wDRMEeSQ37GXUClEnA"/>
      <parameter id="_w4gOMjRMEeSQ37GXUClEnA" name="SQL_CONNECTION" type="String" value="%targetConnection{$REF}%"/>
      <parameter id="_w4gOMzRMEeSQ37GXUClEnA" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
      <parameter id="_w4gONDRMEeSQ37GXUClEnA" name="SQL_TRANSACTION_TYPE" type="String" value="%x{if (md:paramValue($this,'transactionalModeOnWorkTables')='true') then 'NOCOMMIT' else 'AUTOCOMMIT' }x%"/>
      <parameter id="_15EV0NSaEeWbPtaFLvZhPQ" name="SQL_TRANSACTION_NAME" type="String" value="%x{if (md:paramValue($this,'transactionalModeOnWorkTables')='true') then md:paramValue($this,'transactionName') else '' }x%"/>
      <code>%x{if($REF/ref:target()/tech:dropViewIfExists()) then $REF/ref:target()/tech:dropViewIfExists($stageTableName) else concat('drop view ',$stageTableName)}x%</code>
    </actionCode>
    <actionCode id="_skc9QNrkEeWYjZegBSkYwA" generationCondition="'${commitTransaction}$'='true' and '${transactionalModeOnWorkTables}$'='true'" isBeginAction="false" name="T - Commit of transaction" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
      <parameter id="_skc9QtrkEeWYjZegBSkYwA" name="SQL_CONNECTION" type="String" value="%targetConnection{$REF}%"/>
      <parameter id="_skc9Q9rkEeWYjZegBSkYwA" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
      <parameter id="_skc9RNrkEeWYjZegBSkYwA" name="SQL_TRANSACTION_NAME" type="String" value="%x{if (md:paramValue($this,'transactionalModeOnWorkTables')='true') then md:paramValue($this,'transactionName') else '' }x%"/>
      <parameter id="_skc9RdrkEeWYjZegBSkYwA" name="SQL_TRANSACTION_TYPE" type="String" value="COMMIT"/>
      <code></code>
    </actionCode>
    <subProcess id="_CPy-QLCCEeqAJL64qj9Gxw" generationCondition="not(md:paramValue($this, 'lockCdcTable')='false')" isBeginAction="false" name="Lock CDC" nbCycles="-1" repetitionMode="Parallelize" repetitionQuery="$sourceSets/sourceSet" repetitionVariableName="CUR_SOURCE_SET" toleratedError="false">
      <link id="_DIfg0LCCEeqAJL64qj9Gxw" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_rdD5NTRMEeSQ37GXUClEnA"/>
      <actionCode id="_CPy-QbCCEeqAJL64qj9Gxw" generationCondition="" isBeginAction="false" name="Lock of CDC table" nbCycles="-1" repetitionMode="Parallelize" repetitionQuery="$REF/ref:from($CUR_SOURCE_SET/@name)[tech:isCdc()]" repetitionVariableName="CDC" toleratedError="false" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
        <parameter id="_CPy-QrCCEeqAJL64qj9Gxw" name="SQL_CONNECTION" type="String" value="%sourceConnection{$REF}%"/>
        <parameter id="_CPy-Q7CCEeqAJL64qj9Gxw" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
        <code>update 	%x{$CDC/ref:target()/tech:cdcTablePath()}x%&#xD;
set 	CDC_CONSUMMATION = '1'&#xD;
where	(1=1)&#xD;
%x{$CDC/tech:cdcFilterPart2($this)}x%</code>
      </actionCode>
    </subProcess>
    <templateType>EXECUTE</templateType>
    <xslVariable id="_HuqhcOx5EeaHab5deMqBaw" code="if(md:paramValue($this,'useStageNameForTemporaryObjectName') = 'true')&#xD;&#xA;&#x9;then md:objectPath($REF/ref:schema(),$REF/ref:schema()/tech:addDelimiter(substring-after($REF/ancestor-or-self::step/@name, '_')))&#xD;&#xA;&#x9;else md:physicalPath($REF,'workName')" name="stageTableName" type="xpath"/>
    <xslVariable id="_CP5r8LCCEeqAJL64qj9Gxw" code="%xsl{&#xD;&#xA;&lt;xsl:for-each select=&quot;if (count($REF/tech:sourceSets())=0) then '' else $REF/tech:sourceSets() &quot;>&#xD;&#xA;&lt;xsl:variable name=&quot;sourceSetName&quot; select=&quot;.&quot; />&#xD;&#xA;&lt;xsl:if test=&quot;exists($REF/ref:from($sourceSetName)[tech:isCdc()])&quot;>&#xD;&#xA;&lt;sourceSet name=&quot;{$sourceSetName}&quot;/>&#xD;&#xA;&lt;/xsl:if>&#xD;&#xA;&lt;/xsl:for-each>&#xD;&#xA;}xsl%" name="sourceSets" type="xsl"/>
  </subProcess>
  <subProcess id="_rdD5OTRMEeSQ37GXUClEnA" generationCondition="" name="CLEAN_INTEGRATION">
    <actionCode id="_rdD5OjRMEeSQ37GXUClEnA" generationCondition="'${cleanTemporaryObjects }$'='true' " enable="true" isBeginAction="false" name="Drop table staging" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
      <parameter id="_rdD5OzRMEeSQ37GXUClEnA" name="SQL_CONNECTION" type="String" value="%targetConnection{$REF}%"/>
      <parameter id="_rdD5PDRMEeSQ37GXUClEnA" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
      <parameter id="_rdD5PTRMEeSQ37GXUClEnA" name="SQL_TRANSACTION_TYPE" type="String" value="%x{if (md:paramValue($this,'transactionalModeOnWorkTables')='true') then 'NOCOMMIT' else 'AUTOCOMMIT' }x%"/>
      <parameter id="_4qpFkNSaEeWbPtaFLvZhPQ" name="SQL_TRANSACTION_NAME" type="String" value="%x{if (md:paramValue($this,'transactionalModeOnWorkTables')='true') then md:paramValue($this,'transactionName') else '' }x%"/>
      <code>%x{if($REF/ref:target()/tech:dropTableIfExists()) then $REF/ref:target()/tech:dropTableIfExists($stageTableName) else concat('drop table ',$stageTableName)}x%</code>
    </actionCode>
    <subProcess id="__VVYQLCBEeqAJL64qj9Gxw" generationCondition="not(md:paramValue($this, 'unlockCdcTable')='false')" isBeginAction="false" name="Unlock CDC" nbCycles="-1" repetitionMode="Parallelize" repetitionQuery="$sourceSets/sourceSet" repetitionVariableName="CUR_SOURCE_SET" toleratedError="false">
      <actionCode id="__VVYQbCBEeqAJL64qj9Gxw" generationCondition="" isBeginAction="false" name="Unlock of CDC table" nbCycles="-1" repetitionMode="Parallelize" repetitionQuery="$REF/ref:from($CUR_SOURCE_SET/@name)[tech:isCdc()]" repetitionVariableName="CDC" toleratedError="false" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
        <parameter id="__VVYQrCBEeqAJL64qj9Gxw" name="SQL_CONNECTION" type="String" value="%sourceConnection{$REF}%"/>
        <parameter id="__VVYQ7CBEeqAJL64qj9Gxw" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
        <code>%x{$CDC/ref:target()/tech:cdcDeleteDml()}x%&#xD;
Where	CDC_CONSUMMATION = '1'&#xD;
%x{$CDC/tech:cdcFilterPart2($this)}x%</code>
      </actionCode>
    </subProcess>
    <templateType>CLEANUP</templateType>
    <xslVariable id="_NNik8Ox5EeaHab5deMqBaw" code="if(md:paramValue($this,'useStageNameForTemporaryObjectName') = 'true')&#xD;&#xA;&#x9;then md:objectPath($REF/ref:schema(),$REF/ref:schema()/tech:addDelimiter(substring-after($REF/ancestor-or-self::step/@name, '_')))&#xD;&#xA;&#x9;else md:physicalPath($REF,'workName')" name="stageTableName" type="xpath"/>
    <xslVariable id="__VNccLCBEeqAJL64qj9Gxw" code="%xsl{&#xD;&#xA;&lt;xsl:for-each select=&quot;if (count($REF/tech:sourceSets())=0) then '' else $REF/tech:sourceSets() &quot;>&#xD;&#xA;&lt;xsl:variable name=&quot;sourceSetName&quot; select=&quot;.&quot; />&#xD;&#xA;&lt;xsl:if test=&quot;exists($REF/ref:from($sourceSetName)[tech:isCdc()])&quot;>&#xD;&#xA;&lt;sourceSet name=&quot;{$sourceSetName}&quot;/>&#xD;&#xA;&lt;/xsl:if>&#xD;&#xA;&lt;/xsl:for-each>&#xD;&#xA;}xsl%" name="sourceSets" type="xsl"/>
  </subProcess>
  <templateType>I-TP.RDBMS</templateType>
</proc:process>