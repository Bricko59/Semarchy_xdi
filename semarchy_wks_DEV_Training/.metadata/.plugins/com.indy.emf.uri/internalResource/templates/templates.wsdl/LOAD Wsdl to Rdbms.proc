<?xml version="1.0" encoding="UTF-8"?>
<proc:process xmlns:proc="http://www.example.org/proc" id="_VUNTATgyEd-jwpjHwxWmmQ" description="This template is used to load the response of a Web Service invocation into a target database.&#xD;&#xA;&#xD;&#xA;The response is retrieved from the exchange file that is generated by the 'Integration Rdbms to Wsdl' template used in the previous step.&#xD;&#xA;&#xD;&#xA;Refer to the description of each Parameter for more information.&#xD;&#xA;&#xD;&#xA;History:&#xD;&#xA;20/07/2018  Support loading data to the databases that use delimiters in the table names (requires Designer S19.0.11 or higher)&#xD;&#xA;02/10/2017  Initialize template history" name="Load Wsdl to Rdbms">
  <parameter id="_VUNTAjgyEd-jwpjHwxWmmQ" description="Optional path to the input file where the exchanges between the Runtime and the Web Service are stored.&#xD;&#xA;&#xD;&#xA;IMPORTANT:&#xD;&#xA;You should set this parameter only when the exchange file is not located at the default location.&#xD;&#xA;Otherwise you can leave this empty and the correct path will be generated automatically.&#xD;&#xA;&#xD;&#xA;You so have to set it when the 'Out File Name' parameter of the previous 'Integration Rdbms to Wsdl' template is defined.&#xD;&#xA;-> When this is the case, the exchange file will be stored at another placer than the default, and you MUST then set this parameter to the same value.&#xD;&#xA;-> Otherwise, the load template will not find the exchange file and will not be able to load the response.&#xD;&#xA;" name="inFileName" type="String"/>
  <parameter id="_VUNTAzgyEd-jwpjHwxWmmQ" description="Optional parameter to specify what is the name of the root node in the exchange file processed by this template.&#xD;&#xA;This defaults to the server name of the WSDL Metadata (root node of the Metadata).&#xD;&#xA;&#xD;&#xA;IMPORTANT:&#xD;&#xA;You should set this only if the 'Super Root Name' parameter of the 'Integration Rdbms to Wsdl' template has been modified in the invocation step.&#xD;&#xA;&#xD;&#xA;If this is the case, set this parameter to the same value.&#xD;&#xA;Otherwise, leave it empty to use the default value.&#xD;&#xA;" name="superRootName" type="String" value=""/>
  <parameter id="_VUNTBDgyEd-jwpjHwxWmmQ" name="useDistinct" type="Boolean" value="false"/>
  <parameter id="_VUNTBTgyEd-jwpjHwxWmmQ" description="If true, the temporary objects created during the load are removed at the end of the process." name="cleanTemporaryObjects" type="Boolean" value="true"/>
  <parameter id="_hGwP9FupEeCrIMs4Xb-vBQ" name="successIfNoFile" type="Boolean" value="true"/>
  <parameter id="_F7XYwNoFEeCi_78PNYk6Cg" name="emptyElementAsNull" type="Boolean" value="false"/>
  <parameter id="_Y34RMMefEeK_htCybdmYhA" name="base64BinariesExtractDirectory" type="String" value=""/>
  <parameter id="_Y4FFgMefEeK_htCybdmYhA" name="extractBase64BinaryToFile" type="Boolean" value="false"/>
  <parameter id="_g7ksIPANEeWuOrOiSCAkyA" description="When this option is set to true, empty records are filtered out of the data flow." name="filterEmptyRecords" type="Boolean" value="true"/>
  <subProcess id="_VUNTBjgyEd-jwpjHwxWmmQ" isBeginAction="false" name="Load" nbCycles="-1" toleratedError="false">
    <link id="_VUNTBzgyEd-jwpjHwxWmmQ" executionType="OK" generationType="OK" mandatory="1" targetId="_VUNTJDgyEd-jwpjHwxWmmQ?fileId=_VUNTATgyEd-jwpjHwxWmmQ$type=proc$name=Clean?"/>
    <actionCode id="_VUNTCDgyEd-jwpjHwxWmmQ" enable="true" isBeginAction="false" name="Create Table" nbCycles="-1" repetitionPublishParameters="true" repetitionQuery="$fields//datastore" repetitionVariableName="datastore" toleratedError="false" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
      <link id="_VUNTCTgyEd-jwpjHwxWmmQ" executionType="OK" generationType="OK" mandatory="1" targetId="_QZwHIFupEeCrIMs4Xb-vBQ"/>
      <parameter id="_VUNTCjgyEd-jwpjHwxWmmQ" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
      <parameter id="_VUNTCzgyEd-jwpjHwxWmmQ" name="SQL_CONNECTION" type="String"/>
      <parameter id="_VUNTDDgyEd-jwpjHwxWmmQ" name="SQL_TRANSACTION_TYPE" type="String" value="AUTOCOMMIT"/>
      <code>%xsl{&#xD;
create table %x{@physicalName}x%&#xD;
(&#xD;
	%x{md:patternList(field,'{workName}\t{targetWritableType} {targetNullWord}',',\n\t')}%&#xD;
)&#xD;
}%&#xD;
&#xD;
&#xD;
</code>
    </actionCode>
    <actionCode id="_VUNTDTgyEd-jwpjHwxWmmQ" enable="true" isBeginAction="false" name="Drop Table" nbCycles="-1" repetitionPublishParameters="true" repetitionQuery="$fields//datastore" repetitionVariableName="datastore" toleratedError="true" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
      <link id="_VUNTDjgyEd-jwpjHwxWmmQ" executionType="OK" generationType="OK" mandatory="1" targetId="_VUNTCDgyEd-jwpjHwxWmmQ"/>
      <parameter id="_VUNTDzgyEd-jwpjHwxWmmQ" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
      <parameter id="_VUNTEDgyEd-jwpjHwxWmmQ" name="SQL_CONNECTION" type="String"/>
      <parameter id="_VUNTETgyEd-jwpjHwxWmmQ" name="SQL_TRANSACTION_TYPE" type="String" value="AUTOCOMMIT"/>
      <code>drop table %x{@physicalName}x%</code>
    </actionCode>
    <actionCode id="_VUNTEjgyEd-jwpjHwxWmmQ" description="Nous ne savons pas encore comment gÃ©rer les jointures externes car on ne connait pas la partie droite et la partie gauche" generationCondition="not($useSubQuery)" enable="true" isBeginAction="false" name="CreateView" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
      <parameter id="_VUNTEzgyEd-jwpjHwxWmmQ" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
      <parameter id="_VUNTFDgyEd-jwpjHwxWmmQ" name="SQL_CONNECTION" type="String"/>
      <parameter id="_IqWPoI6OEd-XmJDlHOTpAg" name="SQL_TRANSACTION_NAME" type="String" value="DROPVIEW2"/>
      <parameter id="_IqWPoY6OEd-XmJDlHOTpAg" name="SQL_TRANSACTION_TYPE" type="String" value="COMMIT"/>
      <code>create view  %x{$viewName}x%&#xD;
as&#xD;
%x{$Query/query[1]}x%</code>
    </actionCode>
    <actionCode id="_VUNTFTgyEd-jwpjHwxWmmQ" enable="true" isBeginAction="false" name="Drop_View" nbCycles="-1" toleratedError="true" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
      <link id="_VUNTFjgyEd-jwpjHwxWmmQ" executionType="OK" generationType="OK" mandatory="1" targetId="_VUNTDTgyEd-jwpjHwxWmmQ"/>
      <link id="_oBc1sINnEd-IoaIVtuAGTw" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_VUNTHjgyEd-jwpjHwxWmmQ"/>
      <parameter id="_VUNTFzgyEd-jwpjHwxWmmQ" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
      <parameter id="_VUNTGDgyEd-jwpjHwxWmmQ" name="SQL_CONNECTION" type="String"/>
      <parameter id="_B1l-UI6OEd-XmJDlHOTpAg" name="SQL_TRANSACTION_NAME" type="String" value="DROPVIEW"/>
      <parameter id="_B1l-UY6OEd-XmJDlHOTpAg" name="SQL_TRANSACTION_TYPE" type="String" value="COMMIT"/>
      <code>drop view  %x{$viewName}x%</code>
    </actionCode>
    <actionCode id="_VUNTGTgyEd-jwpjHwxWmmQ" enable="true" isBeginAction="false" name="Load Tables" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.XmlToJdbcActionCodeI">
      <link id="_QZvgEVupEeCrIMs4Xb-vBQ" executionType="OK" generationType="OK_KO" mandatory="0" targetId="_QZwHJlupEeCrIMs4Xb-vBQ"/>
      <parameter id="_VUNTGzgyEd-jwpjHwxWmmQ" name="SQL_CONNECTION" type="String" value="%connection{$REF/ref:target()}%"/>
      <parameter id="_VUNTHDgyEd-jwpjHwxWmmQ" name="IN_FILE_NAME" type="String" value="%x{$fileName}x%"/>
      <parameter id="_VUNTHTgyEd-jwpjHwxWmmQ" name="SUPER_ROOT_NAME" ref="#_VUNTAzgyEd-jwpjHwxWmmQ" type="String" value=""/>
      <parameter id="_JAVloNoFEeCi_78PNYk6Cg" name="EMPTY_ELEMENT_AS_NULL" ref="#_F7XYwNoFEeCi_78PNYk6Cg" type="Boolean" value=""/>
      <parameter id="_f_EWUMefEeK_htCybdmYhA" name="BASE_64_BINARIES_EXTRACT_DIRECTORY" type="String" value="%x{if (md:paramValue($this,'extractBase64BinaryToFile')='true') &#xD;&#xA;&#x9;then md:ifEmpty(md:paramValue($this/..,'base64BinariesExtractDirectory'),concat('xmlBase64Binaries/',$REF/ref:target()/@id)) &#xD;&#xA;&#x9;else ''}x%"/>
      <code>&#xD;
%xsl{&#xD;
&#xD;
&lt;xsl:variable name=&quot;md&quot;>&#xD;
&lt;root>&#xD;
	&lt;xsl:copy-of select=&quot;$context&quot;/>&#xD;
	&lt;xsl:for-each select=&quot;$fields/datastore&quot;>&#xD;
		&lt;insert datastore=&quot;{@fullPath}&quot;>insert into %x{@physicalName}% &#xD;
		(%x{md:list(field/workName,',')}%) values(%x{md:list(field/concat(':{',@fullPath,'}:'),',')}%)&lt;/insert>&#xD;
	&lt;/xsl:for-each>&#xD;
&lt;/root>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
%xmlToText{$md}%&#xD;
&#xD;
&#xD;
&#xD;
}% &#xD;
%xsl{&lt;xsl:if test=&quot;$useSubQuery&quot; use-when=&quot;system-property('xpath.function.setStagingpoint.supported')='true'&quot;>&#xD;
&lt;xsl:variable name=&quot;name&quot; select=&quot;$REF/@name&quot;/>&#xD;
&lt;xsl:for-each select=&quot;$REF/../step/source[@name=$REF/@name]&quot;>&#xD;
&lt;xsl:variable name=&quot;current&quot; select=&quot;.&quot;/>&#xD;
%x{md:setStagingPoint(@id,$Query/query[@name=$current/../@name],'query')}x%&#xD;
&lt;/xsl:for-each>&#xD;
&lt;/xsl:if>&#xD;
}xsl%&#xD;
</code>
    </actionCode>
    <actionCode id="_VUNTHjgyEd-jwpjHwxWmmQ" enable="true" isBeginAction="false" name="Drop_Table2" nbCycles="-1" toleratedError="true" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
      <link id="_VUNTHzgyEd-jwpjHwxWmmQ" executionType="OK" generationType="OK" mandatory="1" targetId="_VUNTCDgyEd-jwpjHwxWmmQ"/>
      <parameter id="_VUNTIDgyEd-jwpjHwxWmmQ" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
      <parameter id="_VUNTITgyEd-jwpjHwxWmmQ" name="SQL_CONNECTION" type="String"/>
      <code>drop table  %x{md:physicalPath($REF,'workName')}x%</code>
    </actionCode>
    <actionCode id="_-rJVzYK_Ed-d_svPnbkaRw" generationCondition="$REF/ref:target()/tech:productCode()='MICROSOFT_SQL_SERVER'" enable="true" isBeginAction="false" name="Use for MSSQL" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
      <link id="_-rJVzoK_Ed-d_svPnbkaRw" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_VUNTFTgyEd-jwpjHwxWmmQ"/>
      <parameter id="_-rJVz4K_Ed-d_svPnbkaRw" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
      <parameter id="_-rJV0IK_Ed-d_svPnbkaRw" name="SQL_CONNECTION" type="String"/>
      <parameter id="_9_R0EI6NEd-XmJDlHOTpAg" name="SQL_TRANSACTION_TYPE" type="String" value="COMMIT"/>
      <parameter id="_9_blEI6NEd-XmJDlHOTpAg" name="SQL_TRANSACTION_NAME" type="String" value="DROPVIEW"/>
      <code>use &quot;%x{$REF/ref:target()/ref:workSchema()/tech:catalogName()}x%&quot;&#xD;
</code>
    </actionCode>
    <actionCode id="_SvxAwINnEd-IoaIVtuAGTw" generationCondition="$REF/ref:target()/tech:productCode()='MICROSOFT_SQL_SERVER'" enable="true" isBeginAction="false" name="Use for MSSQL2" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
      <link id="_SvxAwYNnEd-IoaIVtuAGTw" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_VUNTEjgyEd-jwpjHwxWmmQ"/>
      <parameter id="_SvxAwoNnEd-IoaIVtuAGTw" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
      <parameter id="_SvxAw4NnEd-IoaIVtuAGTw" name="SQL_CONNECTION" type="String"/>
      <parameter id="_HxR5oI6OEd-XmJDlHOTpAg" name="SQL_TRANSACTION_NAME" type="String" value="DROPVIEW2"/>
      <parameter id="_HxR5oY6OEd-XmJDlHOTpAg" name="SQL_TRANSACTION_TYPE" type="String" value="COMMIT"/>
      <code>use &quot;%x{$REF/ref:target()/ref:workSchema()/tech:catalogName()}x%&quot;&#xD;
</code>
    </actionCode>
    <actionCode id="_QZwHIFupEeCrIMs4Xb-vBQ" generationCondition="'${successIfNoFile}$'='true'" isBeginAction="false" name="TestFile" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.FileWaitActionCodeI">
      <link id="_QZwHIVupEeCrIMs4Xb-vBQ" generationCondition="'${successIfNoFile}$'='true'" executionCondition="${TestFile/NB_FILES}$==1" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_VUNTGTgyEd-jwpjHwxWmmQ"/>
      <link id="_QZwHIlupEeCrIMs4Xb-vBQ" generationCondition="'${successIfNoFile}$'='true'" executionCondition="${TestFile/NB_FILES}$==0" executionType="OK" generationType="OK_KO" mandatory="0" targetId="_QZwHJlupEeCrIMs4Xb-vBQ"/>
      <link id="_QZwHI1upEeCrIMs4Xb-vBQ" generationCondition="'${successIfNoFile}$'!='true'" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_VUNTGTgyEd-jwpjHwxWmmQ"/>
      <parameter id="_QZwHJFupEeCrIMs4Xb-vBQ" name="WAIT_FILE" type="String" value="%x{$fileName}%"/>
      <parameter id="_QZwHJVupEeCrIMs4Xb-vBQ" name="WAIT_FILE_TIMEOUT" type="String" value="0"/>
    </actionCode>
    <actionCode id="_QZwHJlupEeCrIMs4Xb-vBQ" isBeginAction="false" name="EmptyAction" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.EmptyActionCodeI">
      <link id="_p0V7cIK-Ed-d_svPnbkaRw" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_SvxAwINnEd-IoaIVtuAGTw"/>
    </actionCode>
    <templateType>L-TP.RDBMS.LOADING</templateType>
    <xslVariable id="_VUNTIjgyEd-jwpjHwxWmmQ" code="%xsl{&#xD;&#xA;&lt;xsl:apply-templates select=&quot;$REF/source/ref:target()/ancestor::wsdl&quot; mode=&quot;analyzeDatastore&quot;>&#xD;&#xA;&lt;xsl:with-param name=&quot;filters&quot; select=&quot;$REF/ref:fields()/ref:sources()/@id&quot; tunnel=&quot;yes&quot;/>&#xD;&#xA;&lt;xsl:with-param name=&quot;activeFilters&quot; select=&quot;true()&quot; tunnel=&quot;yes&quot;/>&#xD;&#xA;&lt;xsl:with-param name=&quot;datastorePrefix&quot; select=&quot;$REF/tech:workName()&quot; tunnel=&quot;yes&quot;/>&#xD;&#xA;&lt;xsl:with-param name=&quot;resetPosition&quot; select=&quot;true()&quot;/>&#xD;&#xA;&lt;/xsl:apply-templates>&#xD;&#xA;}xsl%&#xD;&#xA;&#xD;&#xA;" name="context" type="xsl"/>
    <xslVariable id="_VUNTIzgyEd-jwpjHwxWmmQ" code="%xsl{&#xD;&#xA;&lt;xsl:variable name=&quot;targetNullWOrd&quot; select=&quot;$REF/ref:target()/tech:nullWord()&quot;/>&#xD;&#xA;&lt;xsl:for-each select=&quot;$context//datastore&quot;>&#xD;&#xA;&lt;xsl:variable name=&quot;name&quot;>&#xD;&#xA;&#x9;&lt;xsl:variable name=&quot;num&quot; select=&quot;substring-after(@name,$REF/tech:workName())&quot;/>&#xD;&#xA;&#x9;&lt;xsl:variable name=&quot;name&quot; select=&quot;$REF/tech:workName('',$num)&quot;/>&#xD;&#xA;&#x9;&lt;xsl:value-of select=&quot;if ($REF/tech:workName()!=$name) then $name else @name &quot;/>&#xD;&#xA;&lt;/xsl:variable>&#xD;&#xA;&lt;datastore name=&quot;{$name}&quot; fullPath=&quot;{@fullPath}&quot; physicalName=&quot;{md:objectPath($REF/ref:parent(),$name,'workName')}&quot;>&#xD;&#xA;&#x9;&lt;xsl:if test=&quot;position()>1&quot;>&#xD;&#xA;&#x9;&#x9;&lt;field id=&quot;{@id}&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;targetWritableType>%x{$REF/ref:target()/tech:numericDDL(10)}%&lt;/targetWritableType>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;targetNullWord>%x{$targetNullWOrd}%&lt;/targetNullWord>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;workName>stb_parentKey&lt;/workName>&#xD;&#xA;&#x9;&#x9;&lt;/field>&#xD;&#xA;&#x9;&lt;/xsl:if>&#xD;&#xA;&#x9;&lt;field id=&quot;{@id}&quot;>&#xD;&#xA;&#x9;&#x9;&lt;targetWritableType>%x{$REF/ref:target()/tech:numericDDL(10)}%&lt;/targetWritableType>&#xD;&#xA;&#x9;&#x9;&lt;targetNullWord>%x{$targetNullWOrd}%&lt;/targetNullWord>&#xD;&#xA;&#x9;&#x9;&lt;workName>stb_key&lt;/workName>&#xD;&#xA;&#x9;&lt;/field>&#xD;&#xA;&#xD;&#xA;&#x9;&lt;xsl:variable name=&quot;position&quot; select=&quot;position()&quot;/>&#xD;&#xA;&#x9;&lt;xsl:for-each select=&quot;field&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;xsl:variable name=&quot;current&quot; select=&quot;.&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;xsl:variable name=&quot;id&quot; select=&quot;@id&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:for-each select=&quot;$REF/ref:fields()[ref:sources()/@id=current()/@id]&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;field id=&quot;{$id}&quot; fullPath=&quot;{$current/@fullPath}&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;targetWritableType>%x{tech:targetWritableType()}%&lt;/targetWritableType>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;targetNullWord>%x{$targetNullWOrd}%&lt;/targetNullWord>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;workName>%x{tech:workName()}%&lt;/workName>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/field>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:for-each>&#xD;&#xA;&#x9;&#x9;&lt;/xsl:for-each>&#xD;&#xA;&#xD;&#xA;&lt;/datastore>&#xD;&#xA;&lt;/xsl:for-each>&#xD;&#xA;}%" name="fields" order="1" type="xsl"/>
    <xslVariable id="_gGVwlCIpEeC5ftgJTnsBJQ" code="if ($REF/ref:target()/tech:productCode()='MICROSOFT_SQL_SERVER') &#xD;&#xA;&#x9;then concat($REF/ref:target()/ref:workSchema()/tech:schemaName(),'.',$REF/tech:workName())&#xD;&#xA;&#x9;else md:physicalPath($REF,'workName')" name="viewName" type="xpath"/>
    <xslVariable id="_Zh3QRFurEeCrIMs4Xb-vBQ" code="md:ifEmpty(md:paramValue($this,'inFileName'),$REF/ref:source()/tech:xmlFilePath(),concat('${/CORE_TEMPORARY_FOLDER}$/',$REF/ref:source()/@id,'.xml'))" name="fileName" type="xpath"/>
    <xslVariable id="_UrdTYJ14EeSuxsIumQHgUQ" code="%xsl{&#xD;&#xA;&lt;xsl:variable name=&quot;direction&quot; select=&quot;$REF/ref:target()/ref:product()/tech:leftJoin()&quot;/>&#xD;&#xA;&lt;xsl:variable name=&quot;useBracket&quot; select=&quot;$REF/ref:target()/ref:product()/tech:hasExplicitJoinInBracket()&quot;/>&#xD;&#xA;&#xD;&#xA;&lt;xsl:variable name=&quot;name&quot; select=&quot;$REF/@name&quot;/>&#xD;&#xA;&lt;xsl:variable name=&quot;fields&quot; select=&quot;$REF/ref:fields()&quot;/>&#xD;&#xA;&lt;xsl:variable name=&quot;targetSteps&quot; select=&quot;$REF/ref:targetStep()&quot;/>&#xD;&#xA;&lt;!-- use $REF instead of targetSteps for loop one time into for-each bloc in not sub query mode-->&#xD;&#xA;&lt;xsl:variable name=&quot;targetSteps&quot; select=&quot;if ($useSubQuery) then $targetSteps else $REF&quot;/>&#xD;&#xA;&lt;xsl:for-each select=&quot;$targetSteps&quot;>&#xD;&#xA;&#xD;&#xA;&#x9;&lt;xsl:variable name=&quot;current&quot; select=&quot;.&quot;/>&#xD;&#xA;&#x9;&lt;xsl:variable name=&quot;useFields&quot; select=&quot;if ($useSubQuery) then $REF/ref:fields('',$current) else $REF/ref:fields()&quot;/>&#xD;&#xA;&#x9;&lt;xsl:variable name=&quot;useFieldsId&quot; select=&quot;$useFields/ref:sources()/@id&quot;/>&#xD;&#xA;&#x9;&lt;xsl:variable name=&quot;allDatastore&quot; select=&quot;$context/descendant-or-self::datastore&quot;/>&#xD;&#xA;&#x9;&lt;xsl:variable name=&quot;usedDatastore&quot; select=&quot;if ($useSubQuery) then $allDatastore[./*/@id=$useFieldsId] else $allDatastore&quot;/>&#xD;&#xA;&#x9;&lt;xsl:variable name=&quot;datastore&quot; select=&quot;if ($useSubQuery) then $allDatastore[@id=$useFieldsId or .//@id=$useFieldsId] else $allDatastore&quot;/>&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&lt;xsl:variable name=&quot;usedDatastoreWithMask&quot;>&#xD;&#xA;&#x9;&#x9;&lt;xsl:for-each select=&quot;$usedDatastore&quot;>&#xD;&#xA;&#x9;&#x9;&lt;xsl:sort select=&quot;position()&quot; order=&quot;ascending&quot;/>&#x9;&#xD;&#xA;&#x9;&#x9;&lt;xsl:variable name=&quot;name&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;xsl:variable name=&quot;num&quot; select=&quot;substring-after(@name,$REF/tech:workName())&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;xsl:variable name=&quot;name&quot; select=&quot;$REF/tech:workName('',$num)&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;xsl:value-of select=&quot;if ($REF/tech:workName()!=$name) then $name else @name &quot;/>&#xD;&#xA;&#x9;&#x9;&lt;/xsl:variable>&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&lt;datastore>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;name&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:value-of select=&quot;$name&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&lt;/datastore>&#xD;&#xA;&#x9;&#x9;&lt;/xsl:for-each>&#xD;&#xA;&#x9;&lt;/xsl:variable>&#x9;&#xD;&#xA;&#x9;&#xD;&#xA;&lt;xsl:variable name=&quot;joins&quot;>&#xD;&#xA;&#x9;&lt;xsl:for-each select=&quot;$datastore&quot;>&#xD;&#xA;&#x9;&lt;xsl:sort select=&quot;position()&quot; order=&quot;ascending&quot;/>&#xD;&#xA;&#xD;&#xA;&#x9;&lt;xsl:variable name=&quot;name&quot;>&#xD;&#xA;&#x9;&#x9;&lt;xsl:variable name=&quot;num&quot; select=&quot;substring-after(@name,$REF/tech:workName())&quot;/>&#xD;&#xA;&#x9;&#x9;&lt;xsl:variable name=&quot;name&quot; select=&quot;$REF/tech:workName('',$num)&quot;/>&#xD;&#xA;&#x9;&#x9;&lt;xsl:value-of select=&quot;if ($REF/tech:workName()!=$name) then $name else @name &quot;/>&#xD;&#xA;&#x9;&lt;/xsl:variable>&#xD;&#xA;&#x9;&lt;xsl:variable name=&quot;namep&quot;>&#xD;&#xA;&#x9;&#x9;&lt;xsl:variable name=&quot;num&quot; select=&quot;substring-after(../@name,$REF/tech:workName())&quot;/>&#xD;&#xA;&#x9;&#x9;&lt;xsl:variable name=&quot;name&quot; select=&quot;$REF/tech:workName('',$num)&quot;/>&#xD;&#xA;&#x9;&#x9;&lt;xsl:value-of select=&quot;if ($REF/tech:workName()!=$name) then $name else ../@name &quot;/>&#xD;&#xA;&#x9;&lt;/xsl:variable>&#xD;&#xA;&#x9;&#x9;&lt;xsl:if test=&quot;position()>1&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;join id=&quot;{position()}&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;expr>%x{$direction}%&lt;/expr>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;right>%x{concat(md:objectPath($REF/ref:parent(),$name,'workName'),' ',$REF/ref:target()/tech:tableAliasWord(),' ',$name)}%&lt;/right>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;left>%x{concat(md:objectPath($REF/ref:parent(),$namep,'workName'),' ',$REF/ref:target()/tech:tableAliasWord(),' ',$namep)}%&lt;/left>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;on>%x{$namep}%.stb_key=%x{$name}%.stb_parentKey&lt;/on>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;/join>&#xD;&#xA;&#x9;&#x9;&lt;/xsl:if>&#xD;&#xA;&#x9;&lt;/xsl:for-each>&#xD;&#xA;&lt;/xsl:variable>&#xD;&#xA;&#xD;&#xA;&lt;xsl:variable name=&quot;joins&quot;>&#xD;&#xA;&#x9;&lt;xsl:call-template name=&quot;rdbms:join&quot;>&#xD;&#xA;&#x9;&#x9;&lt;xsl:with-param name=&quot;joins&quot; select=&quot;$joins&quot;/>&#xD;&#xA;&#x9;&#x9;&lt;xsl:with-param name=&quot;bracket&quot; select=&quot;$useBracket&quot; tunnel=&quot;yes&quot;/>&#xD;&#xA;&#x9;&lt;/xsl:call-template>&#xD;&#xA;&lt;/xsl:variable>&#xD;&#xA;&lt;xsl:variable name=&quot;from&quot;>&#xD;&#xA;&#x9;&lt;xsl:choose>&#xD;&#xA;&#x9;&lt;xsl:when test=&quot;count($datastore)>1&quot;>&#xD;&#xA;&#x9;&#x9;&lt;xsl:copy-of select=&quot;$joins&quot;/>&#xD;&#xA;&#x9;&#x9;&lt;!--&lt;xsl:apply-templates select=&quot;$joins&quot; mode=&quot;join&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;xsl:with-param name=&quot;bracket&quot; select=&quot;$useBracket&quot; tunnel=&quot;yes&quot;/>&#xD;&#xA;&#x9;&#x9;&lt;/xsl:apply-templates>-->&#xD;&#xA;&#x9;&lt;/xsl:when>&#xD;&#xA;&#x9;&lt;xsl:otherwise>&#xD;&#xA;&#x9;%x{concat(md:objectPath($REF/ref:parent(),$datastore/@name,'workName'),' ',$REF/ref:target()/tech:tableAliasWord(),' ',$datastore/@name)}%&#xD;&#xA;&#x9;&lt;/xsl:otherwise>&#xD;&#xA;&#x9;&lt;/xsl:choose>&#xD;&#xA;&lt;/xsl:variable>&#xD;&#xA;&#xD;&#xA;&lt;query name=&quot;{@name}&quot;>&#xD;&#xA;select %x{if (md:paramValue($this,'useDistinct')='true') then 'DISTINCT ' else ''}x%&#xD;&#xA;%x{md:patternList($useFields,'[workName]', ',\n\t')}x%&#xD;&#xA;from %x{$from}x%&#xD;&#xA;where (1=1)&#xD;&#xA;%x{if (md:paramValue($this,'disableFilterPart')='true') then '' else $REF/tech:filterPart()}%&#xD;&#xA;%x{if(md:paramValue($this,'filterEmptyRecords')='true') then md:list($usedDatastoreWithMask/datastore/concat(@name,'.stb_key is null'), ' and\n\t', 'and not(\n\t', ')') else ''}x%&#xD;&#xA;%x{$REF/tech:joinPart()}%&#xD;&#xA;&#xD;&#xA;&lt;/query>&#xD;&#xA;&#xD;&#xA;&lt;/xsl:for-each>&#xD;&#xA;&#xD;&#xA;}xsl%" name="Query" order="200" type="xsl"/>
    <xslVariable id="_UrnrcJ14EeSuxsIumQHgUQ" code="if (md:paramValue($this,'useView')='true') then false()&#xD;&#xA;else function-available('md:setStagingPoint')" name="useSubQuery" type="xpath"/>
  </subProcess>
  <subProcess id="_VUNTJDgyEd-jwpjHwxWmmQ" generationCondition="'${cleanTemporaryObjects}$'='true'" isBeginAction="false" name="Clean" nbCycles="-1" toleratedError="false">
    <actionCode id="_RYi7sJ15EeSuxsIumQHgUQ" generationCondition="$REF/ref:target()/tech:productCode()='MICROSOFT_SQL_SERVER' and not($useSubQuery)" enable="true" isBeginAction="false" name="Drop_View for MSSQL" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
      <link id="_RYi7sZ15EeSuxsIumQHgUQ" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_RYi7tp15EeSuxsIumQHgUQ"/>
      <parameter id="_RYi7sp15EeSuxsIumQHgUQ" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
      <parameter id="_RYi7s515EeSuxsIumQHgUQ" name="SQL_CONNECTION" type="String" value="%targetConnection{$REF}%"/>
      <parameter id="_RYi7tJ15EeSuxsIumQHgUQ" name="SQL_TRANSACTION_NAME" type="String" value="DROPVIEW"/>
      <parameter id="_RYi7tZ15EeSuxsIumQHgUQ" name="SQL_TRANSACTION_TYPE" type="String" value="COMMIT"/>
      <code>drop view %x{$viewName}x%</code>
    </actionCode>
    <actionCode id="_RYi7tp15EeSuxsIumQHgUQ" generationCondition="" enable="true" isBeginAction="false" name="Drop Table" nbCycles="-1" repetitionPublishParameters="true" repetitionQuery="$fields//datastore" repetitionVariableName="datastore" toleratedError="false" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
      <parameter id="_RYi7t515EeSuxsIumQHgUQ" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
      <parameter id="_RYi7uJ15EeSuxsIumQHgUQ" name="SQL_CONNECTION" type="String" value="%targetConnection{$REF}%"/>
      <parameter id="_RYi7uZ15EeSuxsIumQHgUQ" name="SQL_TRANSACTION_TYPE" type="String" value="AUTOCOMMIT"/>
      <code>drop table %x{@physicalName}x%</code>
    </actionCode>
    <actionCode id="_RYi7up15EeSuxsIumQHgUQ" generationCondition="$REF/ref:target()/tech:productCode()!='MICROSOFT_SQL_SERVER' and not($useSubQuery)" enable="true" isBeginAction="false" name="Drop_View" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
      <link id="_RYi7u515EeSuxsIumQHgUQ" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_RYi7tp15EeSuxsIumQHgUQ"/>
      <parameter id="_RYi7vJ15EeSuxsIumQHgUQ" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
      <parameter id="_RYi7vZ15EeSuxsIumQHgUQ" name="SQL_CONNECTION" type="String" value="%targetConnection{$REF}%"/>
      <parameter id="_RYi7vp15EeSuxsIumQHgUQ" name="SQL_TRANSACTION_TYPE" type="String" value="AUTOCOMMIT"/>
      <code>drop view %x{$viewName}x%</code>
    </actionCode>
    <actionCode id="_RYi7v515EeSuxsIumQHgUQ" generationCondition="$REF/ref:target()/tech:productCode()='MICROSOFT_SQL_SERVER' and not($useSubQuery)" enable="true" isBeginAction="false" name="Use for MSSQL" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
      <link id="_RYi7wJ15EeSuxsIumQHgUQ" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_RYi7sJ15EeSuxsIumQHgUQ"/>
      <parameter id="_RYi7wZ15EeSuxsIumQHgUQ" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
      <parameter id="_RYi7wp15EeSuxsIumQHgUQ" name="SQL_CONNECTION" type="String" value="%targetConnection{$REF}%"/>
      <parameter id="_RYi7w515EeSuxsIumQHgUQ" name="SQL_TRANSACTION_TYPE" type="String" value="COMMIT"/>
      <parameter id="_RYi7xJ15EeSuxsIumQHgUQ" name="SQL_TRANSACTION_NAME" type="String" value="DROPVIEW"/>
      <code>use &quot;%x{$REF/ref:target()/ref:workSchema()/tech:catalogName()}x%&quot;&#xD;
</code>
    </actionCode>
    <actionCode id="_RYjiwJ15EeSuxsIumQHgUQ" generationCondition="'${cleanTemporaryObjects}$'='true'" isBeginAction="false" name="Empty" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.EmptyActionCodeI">
      <link id="_RYjiwZ15EeSuxsIumQHgUQ" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_RYi7v515EeSuxsIumQHgUQ"/>
      <link id="_RYjiwp15EeSuxsIumQHgUQ" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_RYi7up15EeSuxsIumQHgUQ"/>
    </actionCode>
    <templateType>L-TP.RDBMS.CLEANING</templateType>
    <xslVariable id="_FQvvpCfmEeCCv-gaJRAziQ" code="if ($REF/ref:target()/tech:productCode()='MICROSOFT_SQL_SERVER') &#xD;&#xA;&#x9;then concat($REF/ref:target()/ref:workSchema()/tech:schemaName(),'.',$REF/tech:workName())&#xD;&#xA;&#x9;else md:physicalPath($REF,'workName')" name="viewName" type="xpath"/>
    <xslVariable id="_PSOIYJ15EeSuxsIumQHgUQ" code="%xsl{&#xD;&#xA;&lt;xsl:variable name=&quot;targetNullWOrd&quot; select=&quot;$REF/ref:target()/tech:nullWord()&quot;/>&#xD;&#xA;&lt;xsl:for-each select=&quot;$context//datastore&quot;>&#xD;&#xA;&lt;xsl:variable name=&quot;name&quot;>&#xD;&#xA;&#x9;&lt;xsl:variable name=&quot;num&quot; select=&quot;substring-after(@name,$REF/tech:workName())&quot;/>&#xD;&#xA;&#x9;&lt;xsl:variable name=&quot;name&quot; select=&quot;$REF/tech:workName('',$num)&quot;/>&#xD;&#xA;&#x9;&lt;xsl:value-of select=&quot;if ($REF/tech:workName()!=$name) then $name else @name &quot;/>&#xD;&#xA;&lt;/xsl:variable>&#xD;&#xA;&lt;datastore name=&quot;{$name}&quot; fullPath=&quot;{@fullPath}&quot; physicalName=&quot;{md:objectPath($REF/ref:parent(),$name,'workName')}&quot;>&#xD;&#xA;&#x9;&lt;xsl:if test=&quot;position()>1&quot;>&#xD;&#xA;&#x9;&#x9;&lt;field id=&quot;{@id}&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;targetWritableType>%x{$REF/ref:target()/tech:numericDDL(10)}%&lt;/targetWritableType>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;targetNullWord>%x{$targetNullWOrd}%&lt;/targetNullWord>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;workName>stb_parentKey&lt;/workName>&#xD;&#xA;&#x9;&#x9;&lt;/field>&#xD;&#xA;&#x9;&lt;/xsl:if>&#xD;&#xA;&#x9;&lt;field id=&quot;{@id}&quot;>&#xD;&#xA;&#x9;&#x9;&lt;targetWritableType>%x{$REF/ref:target()/tech:numericDDL(10)}%&lt;/targetWritableType>&#xD;&#xA;&#x9;&#x9;&lt;targetNullWord>%x{$targetNullWOrd}%&lt;/targetNullWord>&#xD;&#xA;&#x9;&#x9;&lt;workName>stb_key&lt;/workName>&#xD;&#xA;&#x9;&lt;/field>&#xD;&#xA;&#xD;&#xA;&#x9;&lt;xsl:variable name=&quot;position&quot; select=&quot;position()&quot;/>&#xD;&#xA;&#x9;&lt;xsl:for-each select=&quot;field&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;xsl:variable name=&quot;current&quot; select=&quot;.&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;xsl:variable name=&quot;id&quot; select=&quot;@id&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:for-each select=&quot;$REF/ref:fields()[ref:sources()/@id=current()/@id]&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;field id=&quot;{$id}&quot; fullPath=&quot;{$current/@fullPath}&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;targetWritableType>%x{tech:targetWritableType()}%&lt;/targetWritableType>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;targetNullWord>%x{$targetNullWOrd}%&lt;/targetNullWord>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;workName>%x{tech:workName()}%&lt;/workName>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/field>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:for-each>&#xD;&#xA;&#x9;&#x9;&lt;/xsl:for-each>&#xD;&#xA;&#xD;&#xA;&lt;/datastore>&#xD;&#xA;&lt;/xsl:for-each>&#xD;&#xA;}%" name="fields" order="1" type="xsl"/>
    <xslVariable id="_PSZukJ15EeSuxsIumQHgUQ" code="%xsl{&#xD;&#xA;&lt;xsl:apply-templates select=&quot;$REF/source/ref:target()/ancestor::wsdl&quot; mode=&quot;analyzeDatastore&quot;>&#xD;&#xA;&lt;xsl:with-param name=&quot;filters&quot; select=&quot;$REF/ref:fields()/ref:sources()/@id&quot; tunnel=&quot;yes&quot;/>&#xD;&#xA;&lt;xsl:with-param name=&quot;activeFilters&quot; select=&quot;true()&quot; tunnel=&quot;yes&quot;/>&#xD;&#xA;&lt;xsl:with-param name=&quot;datastorePrefix&quot; select=&quot;$REF/tech:workName()&quot; tunnel=&quot;yes&quot;/>&#xD;&#xA;&lt;xsl:with-param name=&quot;resetPosition&quot; select=&quot;true()&quot;/>&#xD;&#xA;&lt;/xsl:apply-templates>&#xD;&#xA;}xsl%&#xD;&#xA;&#xD;&#xA;" name="context" type="xsl"/>
    <xslVariable id="_SGUnsJ15EeSuxsIumQHgUQ" code="if (md:paramValue($this,'useView')='true') then false()&#xD;&#xA;else function-available('md:setStagingPoint')" name="useSubQuery" type="xpath"/>
  </subProcess>
  <templateType>L-TP.RDBMS</templateType>
</proc:process>