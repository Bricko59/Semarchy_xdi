<?xml version="1.0" encoding="UTF-8"?>
<proc:process xmlns:proc="http://www.example.org/proc" id="_fd_lcVFZEeGOorpBdKd57Q" description="This template is used to load a file in Microsoft SQL Server using the BULK statement or the BCP utility.&#xD;&#xA;&#xD;&#xA;The Runtime and the file must be located on the target Microsoft SQL Server machine to use this template if you are using BULK Load method.&#xD;&#xA;&#xD;&#xA;If you are using BCP method the Runtime must be located on a machine with BCP utility installed.&#xD;&#xA;&#xD;&#xA;History:&#xD;&#xA;10/08/2020&#x9;Genreate list of arguments used by bcp in BCP_ARGUMENTS variable and bcp command in BCP_COMMAND variable&#xD;&#xA;24/04/2020&#x9;New parameter 'Succes If No File'&#xD;&#xA;29/07/2019&#x9;Generation of package is failing when 'Header Line Position' source file Metadata attribute is externalized&#xD;&#xA;10/01/2019&#x9;Support using BCP command to load data&#xD;&#xA;23/10/2018&#x9;'from_file_dynamic' format method was not using the row separator, field separator, and charset defined in the Metadata to read the header line&#xD;&#xA;09/10/2018&#x9;New 'File Format Method' to change how the columns list and order is produced&#xD;&#xA;19/09/2017&#x9;New 'Clean Initial Temporary Objects' parameter to manage the drop statement performed at the template's start&#xD;&#xA;22/03/2017&#x9;Clean log and bad files generated by previous executions&#xD;&#xA;22/03/2017&#x9;Initialize template history" dynamicName="">
  <parameter id="_oDscoBV7EemJ-PVUNWIcUA" description="Specifies the method to use for loading data into Microsoft SQL Server.&#xD;&#xA;&#xD;&#xA;- BULK: &#xD;&#xA;The BULK statement is used to load the  files into Microsoft SQL Server.&#xD;&#xA;This statement requires the file to be located on a location Microsoft SQL Server has access to be able to load it.&#xD;&#xA;&#xD;&#xA;- BCP:&#xD;&#xA;The BCP command line utility is used to load the file into Microsoft SQL Server.&#xD;&#xA;Make sure that the utility is available on the Runtime's machine for this mode to work." metaInf="&lt;metaInf id=&quot;value&quot;  value=&quot;BULK&quot;/>&#xD;&#xA;&lt;metaInf id=&quot;value&quot;  value=&quot;BCP&quot;/>" name="loadMethod" type="String" value="BULK"/>
  <parameter id="_aDcTwJ0aEeekQOSyujLVoQ" description="If true, the template will try at start to remove the temporary objects that will be created during the load, to be sure that those objects don't already exist before processing.&#xD;&#xA;&#xD;&#xA;This can be disabled to avoid unnecessary operations that might be time consuming in some environments.&#xD;&#xA;For instance, when using this template in a Semarchy Web Service, with dynamic work names, in which it is so useless to try dropping those objects at start.&#xD;&#xA;" name="cleanInitialTemporaryObjects" type="Boolean" value="true"/>
  <parameter id="_C2u0oFFaEeGOorpBdKd57Q" description="If true, the temporary objects created during the load are removed at the end of the process" name="cleanTemporaryObjects" type="Boolean" value="true"/>
  <parameter id="_m2MwAMuTEeiPY-9-vFlpTA" description="Defines how the file format should be handled.&#xD;&#xA;&#xD;&#xA;Before being loaded into SQL Server using the BULK statement, the template is generating a format file containing the columns information.&#xD;&#xA;The format file is then passed to the BULK statement when loading the file.&#xD;&#xA;This parameter defines how the columns of the format file should be calculated.&#xD;&#xA;&#xD;&#xA;- from_metadata: the list of columns is retrieved from the source file Metadata and will always be the same.&#xD;&#xA;- from_file_dynamic: the list of columns is retrieved dynamically from the file's header, allowing to have files with a number of columns and columns order which can vary between each file.&#xD;&#xA;&#xD;&#xA;Notes about &quot;from_file_dynamic&quot; method:&#xD;&#xA;This method allows to load files from which the columns may not always be at the same position and which can contain additional columns.&#xD;&#xA;The template will dynamically find the columns order from the first line of the file which is expected to be the header of the file containing the columns list.&#xD;&#xA;This will then be used to generate the correct format file with the correct column order, ignoring the additional columns which are not in the source Metadata.&#xD;&#xA;This method is supported for delimited files only.&#xD;&#xA;&#xD;&#xA;Example of dynamic file:&#xD;&#xA;First file loaded:&#xD;&#xA;CUS_ID,CUS_FIRST_NAME,CUS_LAST_NAME&#xD;&#xA;1,&quot;Jason&quot;,&quot;GIBBS&quot;&#xD;&#xA;&#xD;&#xA;Seconf file loaded:&#xD;&#xA;CUS_ID,ADDITIONAL_COLUMN,CUS_LAST_NAME,CUS_FIRST_NAME&#xD;&#xA;1,&quot;value&quot;,&quot;GIBBS&quot;,&quot;Jason&quot;&#xD;&#xA;&#xD;&#xA;=> In both cases the columns CUS_ID, CUS_FIRST_NAME and CUS_LAST_NAME which are the columns defined in the Metadata / in the Mapping will be loaded correctly.&#xD;&#xA;Even if they are not in the same order and if there is an additional column between them.&#xD;&#xA;The additional column will be ignored." metaInf="&lt;metaInf id=&quot;value&quot; value=&quot;from_metadata&quot; />&#xD;&#xA;&lt;metaInf id=&quot;value&quot; value=&quot;from_file_dynamic&quot; />" name="fileFormatMethod" type="String" value="from_metadata"/>
  <parameter id="_x3_JoFFbEeG7rrmrTCPtTg" description="Specifies the codepage used to BULK insert the file.&#xD;&#xA;&#xD;&#xA;Please refer to the SQL Server BULK Insert reference documentation for more information.&#xD;&#xA;&#xD;&#xA;" name="codePage" type="String" value="ACP"/>
  <parameter id="_bZPHoOYnEeG9Pb5NDOv1Zg" description="The BULK loader version that should be indicated in the generated BULK insert format file" name="loaderVersion" type="String" value="9.0"/>
  <parameter id="_oDfBQBV7EemJ-PVUNWIcUA" description="If set to true BCP utility will connect to SQL Server with a trusted connection using integrated security (option -T).&#xD;&#xA;If set to false, BCP will use user and password configured on the target metadata server to connect (options -U and -P)." name="useTrustedConnection" type="Boolean"/>
  <parameter id="_iJbTUIMREeqYvuihwQGkqQ" description="When set to false, the template will raise an error if the source file is missing.&#xD;&#xA;When set to true, the template will finish in success with an empty load table." name="successIfNoFile" type="Boolean" value="false"/>
  <subProcess id="_uAlFIFFZEeGOorpBdKd57Q" isBeginAction="false" name="Load" nbCycles="-1" toleratedError="false">
    <link id="_6tCJoFFZEeGOorpBdKd57Q" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_46DJEFFZEeGOorpBdKd57Q?fileId=_fd_lcVFZEeGOorpBdKd57Q$type=proc$name=Clean?"/>
    <actionCode id="_xOl5QFFZEeGOorpBdKd57Q" generationCondition="not('${cleanInitialTemporaryObjects}$' = 'false')" isBeginAction="false" name="Drop of load table" nbCycles="-1" toleratedError="true" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
      <link id="_A6gbcJ1REeekQOSyujLVoQ" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_xOl5RVFZEeGOorpBdKd57Q"/>
      <parameter id="_xOl5QlFZEeGOorpBdKd57Q" name="SQL_CONNECTION" type="String" value="%targetConnection{$REF}%"/>
      <parameter id="_xOl5Q1FZEeGOorpBdKd57Q" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
      <parameter id="_xOl5RFFZEeGOorpBdKd57Q" name="SQL_TRANSACTION_TYPE" type="String" value="AUTOCOMMIT"/>
      <code>drop table %x{md:physicalPath($REF,'workName')}x%</code>
    </actionCode>
    <actionCode id="_xOl5RVFZEeGOorpBdKd57Q" generationCondition="" isBeginAction="false" name="Creation of load table" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
      <link id="_cB8yIAPrEeeXGsaiRn-7yQ" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_EZjDsMuVEeiPY-9-vFlpTA"/>
      <parameter id="_xOl5RlFZEeGOorpBdKd57Q" name="SQL_CONNECTION" type="String" value="%targetConnection{$REF}%"/>
      <parameter id="_xOl5R1FZEeGOorpBdKd57Q" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
      <parameter id="_xOl5SFFZEeGOorpBdKd57Q" name="SQL_TRANSACTION_TYPE" type="String" value="AUTOCOMMIT"/>
      <code>create table %x{md:physicalPath($REF,'workName')}x%
(
	%x{md:patternList($REF/ref:columns(),'[workName]\t[targetWritableType] [targetNullWord]',',\n\t')}x%	
)</code>
    </actionCode>
    <actionCode id="_Iav23FFaEeGOorpBdKd57Q" generationCondition="not(md:paramValue($this, 'loadMethod')= 'BCP')" enable="true" isBeginAction="false" name="BULK method" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
      <link id="_Iav23VFaEeGOorpBdKd57Q" executionType="OK" generationType="OK" mandatory="1"/>
      <parameter id="_Iav23lFaEeGOorpBdKd57Q" name="SQL_CONNECTION" type="String" value="%targetConnection{$REF}%"/>
      <parameter id="_Iav231FaEeGOorpBdKd57Q" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
      <parameter id="_Iav24FFaEeGOorpBdKd57Q" name="SQL_TRANSACTION_TYPE" type="String" value="AUTOCOMMIT"/>
      <code>BULK INSERT	%x{md:physicalPath($REF,'workName')}x%
FROM 		'%x{$REF/ref:source()/tech:filePath()}x%'
WITH		(
			FORMATFILE =  '%x{concat($REF/tech:sourceRef()/tech:directoryRef()/tech:path(),'/',$REF/tech:sourceRef()/tech:name())}x%.fmt',
			ROWTERMINATOR = '%x{$REF/ref:source()/tech:asciiLineSeparator()}x%',
			CODEPAGE = '%x{md:paramValue($this,'codePage')}x%',
			FIRSTROW = %e(rhino){%x{$REF/ref:source()/tech:header()}x% + 1}e(rhino)%,
			ERRORFILE = '%x{concat($REF/tech:sourceRef()/tech:directoryRef()/tech:path(),'/',$REF/tech:sourceRef()/tech:name())}x%.bad'
		)
		
		</code>
    </actionCode>
    <actionCode id="_kcicQFHLEeG84sZpNLPURw" generationCondition="$REF/tech:sourceRef()/tech:type() = 'D' and not('${fileFormatMethod}$' = 'from_file_dynamic')" isBeginAction="false" name="Delimited Format File" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.WriteTxtFileActionCodeI">
      <link id="_mkV2QFHLEeG84sZpNLPURw" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_3Lp0EIY_EeqbH7dWmYjEeA"/>
      <parameter id="_kckRcFHLEeG84sZpNLPURw" description="Name of the file" name="TXT_WRITE_FILENAME" type="String" value="%x{concat($REF/tech:sourceRef()/tech:directoryRef()/tech:path(),'/',$REF/tech:sourceRef()/tech:name())}x%.fmt"/>
      <code>%x{md:paramValue($this,'loaderVersion')}x%&#xD;
%x{count($REF/ref:sources()[1]/ref:columns())}x%&#xD;
%xsl preserveSpace=&quot;false&quot;{&#xD;
%x{mds:replace(md:list($cols/col[@isLast='false']/@lineDelim,'\n','','\n'),'___FIELD_SEP___',$asciiFieldSeparator)}x%&#xD;
%x{mds:replace(md:list($cols/col[@isLast='true']/@lineBegDelim,''),'___FIELD_SEP___',$asciiFieldSeparator)}x%%x{$sourceFile/tech:asciiLineSeparator()}x%%x{md:list($cols/col[@isLast='true']/@lineEnd,'\n')}x%&#xD;
}xsl%&#xD;
&#xD;
</code>
    </actionCode>
    <actionCode id="_zdiWAI20EeOvofWmV6YwYg" generationCondition="$REF/tech:sourceRef()/tech:type() = 'P'" isBeginAction="false" name="Positional Format File" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.WriteTxtFileActionCodeI">
      <link id="_zdiWAY20EeOvofWmV6YwYg" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_3Lp0EIY_EeqbH7dWmYjEeA"/>
      <parameter id="_zdiWAo20EeOvofWmV6YwYg" description="Name of the file" name="TXT_WRITE_FILENAME" type="String" value="%x{concat($REF/tech:sourceRef()/tech:directoryRef()/tech:path(),'/',$REF/tech:sourceRef()/tech:name())}x%.fmt"/>
      <code>%x{md:paramValue($this,'loaderVersion')}x%&#xD;
%x{count($REF/ref:sources()[1]/ref:columns())}x%&#xD;
%xsl preserveSpace=&quot;false&quot;{&#xD;
%x{md:list($cols/col[@isLast='false']/@linePos,'\n','','\n')}x%&#xD;
%x{md:list($cols/col[@isLast='true']/@lineBegPos,'')}x%%x{$sourceFile/tech:asciiLineSeparator()}x%%x{md:list($cols/col[@isLast='true']/@lineEnd,'\n')}x%&#xD;
}xsl%&#xD;
&#xD;
</code>
    </actionCode>
    <actionCode id="_WbYLMAPrEeeXGsaiRn-7yQ" isBeginAction="false" name="Delete format file" nbCycles="-1" toleratedError="true" technology="com.indy.engine.actionCodes.FileDeleteActionCodeI">
      <link id="_qsNAEAPrEeeXGsaiRn-7yQ" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_kqO2kAPrEeeXGsaiRn-7yQ"/>
      <parameter id="_iAU1EAPrEeeXGsaiRn-7yQ" name="DEL_FILE" type="String" value="%x{concat($REF/tech:sourceRef()/tech:directoryRef()/tech:path(),'/',$REF/tech:sourceRef()/tech:name())}x%.fmt"/>
    </actionCode>
    <actionCode id="_XLbvIAPrEeeXGsaiRn-7yQ" isBeginAction="false" name="Clean" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.EmptyActionCodeI">
      <link id="_XbAcMAPrEeeXGsaiRn-7yQ" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_xOl5QFFZEeGOorpBdKd57Q"/>
      <link id="_exHuIAPrEeeXGsaiRn-7yQ" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_WbYLMAPrEeeXGsaiRn-7yQ"/>
    </actionCode>
    <actionCode id="_ajugoAPrEeeXGsaiRn-7yQ" isBeginAction="false" name="generate format file" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.EmptyActionCodeI">
      <link id="_JO5QkFFaEeGOorpBdKd57Q" generationCondition="" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_NwryMMuVEeiPY-9-vFlpTA"/>
      <link id="_0ZoK0I20EeOvofWmV6YwYg" generationCondition="" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_OvsYIMuVEeiPY-9-vFlpTA"/>
    </actionCode>
    <actionCode id="_kqO2kAPrEeeXGsaiRn-7yQ" isBeginAction="false" name="Delete bad error file" nbCycles="-1" toleratedError="true" technology="com.indy.engine.actionCodes.FileDeleteActionCodeI">
      <link id="_q8wkkAPrEeeXGsaiRn-7yQ" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_qE69oAPrEeeXGsaiRn-7yQ"/>
      <parameter id="_kqO2kQPrEeeXGsaiRn-7yQ" name="DEL_FILE" type="String" value="%x{concat($REF/tech:sourceRef()/tech:directoryRef()/tech:path(),'/',$REF/tech:sourceRef()/tech:name())}x%.bad.Error.Txt"/>
    </actionCode>
    <actionCode id="_qE69oAPrEeeXGsaiRn-7yQ" isBeginAction="false" name="Delete bad file" nbCycles="-1" toleratedError="true" technology="com.indy.engine.actionCodes.FileDeleteActionCodeI">
      <link id="_ye78kAPrEeeXGsaiRn-7yQ" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_EZjDsMuVEeiPY-9-vFlpTA"/>
      <parameter id="_qE69oQPrEeeXGsaiRn-7yQ" name="DEL_FILE" type="String" value="%x{concat($REF/tech:sourceRef()/tech:directoryRef()/tech:path(),'/',$REF/tech:sourceRef()/tech:name())}x%.bad"/>
    </actionCode>
    <actionCode id="_9t_xsMuUEeiPY-9-vFlpTA" isBeginAction="false" name="Start" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.EmptyActionCodeI">
      <link id="_-xOJQMuUEeiPY-9-vFlpTA" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_XLbvIAPrEeeXGsaiRn-7yQ"/>
      <link id="__wAswMuUEeiPY-9-vFlpTA" executionType="OK" generationType="OK_KO" mandatory="1" targetId="__h9CoMuUEeiPY-9-vFlpTA"/>
    </actionCode>
    <actionCode id="__h9CoMuUEeiPY-9-vFlpTA" generationCondition="'${fileFormatMethod}$' = 'from_file_dynamic'" isBeginAction="false" name="Calculate columns lists" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.EmptyActionCodeI">
      <link id="_DSXZMMuVEeiPY-9-vFlpTA" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_C0tz5MuVEeiPY-9-vFlpTA"/>
    </actionCode>
    <actionCode id="_C0tM0MuVEeiPY-9-vFlpTA" generationCondition="'${fileFormatMethod}$' = 'from_file_dynamic'" isBeginAction="false" name="Calculate dynamic columns list" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.BeanScriptingActionCodeI">
      <link id="_I6s6sMuVEeiPY-9-vFlpTA" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_FDRWIMuVEeiPY-9-vFlpTA"/>
      <parameter id="_C0tM0suVEeiPY-9-vFlpTA" name="SCRIPTING_LANGUAGE" type="String" value="beanshell"/>
      <parameter id="_C0tM08uVEeiPY-9-vFlpTA" name="SCRIPTING_CONNECTION" type="String" value="${../CORE_PATH}$"/>
      <code>&#xD;
&#xD;
Object reader;&#xD;
try{&#xD;
reader=	new com.indy.runtime.file.DelimitedFileReader(new java.io.FileInputStream(&quot;%x{$REF/tech:sourceRef()/tech:filePath()}x%&quot;),&quot;%x{md:ifEmpty($sourceFile/@charsetName,'UTF-8')}x%&quot;);&#xD;
reader.setFieldSeparator(&quot;%x{$sourceFile/tech:asciiFieldSeparator()}x%&quot;);&#xD;
reader.setRowSeparator(&quot;%x{$sourceFile/tech:asciiLineSeparator()}x%&quot;,null);&#xD;
&#xD;
result=&quot;&quot;;&#xD;
index=0;&#xD;
for ( field: reader.readLine()){&#xD;
	index++;&#xD;
	String field2=field.toUpperCase().replace(&quot; &quot;,&quot;_&quot;).replace(&quot;.&quot;,&quot;_&quot;);&#xD;
	if (!result.isEmpty()){&#xD;
			result+=&quot;\n&quot;;&#xD;
		}&#xD;
	val=map.get(field);&#xD;
	if (val==null){&#xD;
		val=map.get(field2);&#xD;
	}&#xD;
	if (val!=null){&#xD;
		result+=index + &quot;	SQLCHAR	0	&quot;+val.columnSize+&quot;	&quot;+&quot;___FIELD_SEP___	&quot;+val.columnPos+&quot;	&quot;+val.workName+&quot;	\&quot;\&quot;&quot;;&#xD;
		&#xD;
	}else{&#xD;
		result+=index + &quot;	SQLCHAR	0	0	___FIELD_SEP___	0	&quot;+field+&quot;	\&quot;\&quot;&quot;;	&#xD;
	}&#xD;
}&#xD;
&#xD;
// replace field delimiters&#xD;
pos = result.lastIndexOf(&quot;___FIELD_SEP___&quot;);&#xD;
if(pos !=-1){&#xD;
	startstring = result.substring(0,pos);&#xD;
	endstring = result.substring(pos+16);&#xD;
	result = startstring + &quot;\&quot;%x{replace($sourceFile/tech:asciiLineSeparator(),'\\','\\\\')}x%\&quot;	&quot; + endstring;&#xD;
}&#xD;
result = result.replace(&quot;___FIELD_SEP___&quot;,&quot;\&quot;%x{$asciiFieldSeparator}x%\&quot;&quot;);&#xD;
result+=&quot;\n&quot;;&#xD;
__ctx__.publishVariable(&quot;../colList&quot;,result);&#xD;
__ctx__.publishVariable(&quot;../colCount&quot;,String.valueOf(index));&#xD;
&#xD;
}finally{&#xD;
	if (reader!=null){&#xD;
		reader.close();&#xD;
	}&#xD;
}&#xD;
&#xD;
</code>
    </actionCode>
    <actionCode id="_C0tz4MuVEeiPY-9-vFlpTA" generationCondition="'${fileFormatMethod}$' = 'from_file_dynamic'" isBeginAction="false" name="Fill columns information" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.BeanScriptingActionCodeI">
      <link id="_C0tz4cuVEeiPY-9-vFlpTA" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_C0tM0MuVEeiPY-9-vFlpTA"/>
      <parameter id="_C0tz4suVEeiPY-9-vFlpTA" name="SCRIPTING_LANGUAGE" type="String" value="beanshell"/>
      <parameter id="_C0tz48uVEeiPY-9-vFlpTA" name="SCRIPTING_CONNECTION" type="String" value="${../CORE_PATH}$"/>
      <code>map=new java.util.HashMap();&#xD;
&#xD;
	%xsl{	&#xD;
	&lt;xsl:for-each select=&quot;$cols/col[not(@filler='true')]&quot;>&#xD;
	column = null;&#xD;
	column = new ColumnInfo();&#xD;
	column.columnName = &quot;%x{@physicalName}x%&quot;;&#xD;
	column.columnSize = &quot;%x{@size}x%&quot;;&#xD;
	column.columnPos = &quot;%x{@position}x%&quot;;&#xD;
	column.workName = &quot;%x{@workName}x%&quot;;&#xD;
	map.put(&quot;%x{@physicalName}x%&quot;,column);&#xD;
	&lt;/xsl:for-each> &#xD;
	}xsl%	</code>
    </actionCode>
    <actionCode id="_C0tz5MuVEeiPY-9-vFlpTA" generationCondition="'${fileFormatMethod}$' = 'from_file_dynamic'" isBeginAction="false" name="Class definition" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.BeanScriptingActionCodeI">
      <link id="_C0tz5cuVEeiPY-9-vFlpTA" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_C0tz4MuVEeiPY-9-vFlpTA"/>
      <parameter id="_C0tz5suVEeiPY-9-vFlpTA" name="SCRIPTING_LANGUAGE" type="String" value="beanshell"/>
      <parameter id="_C0tz58uVEeiPY-9-vFlpTA" name="SCRIPTING_CONNECTION" type="String" value="${../CORE_PATH}$"/>
      <code>import java.io.IOException;&#xD;
import java.lang.reflect.Array;&#xD;
import java.sql.ParameterMetaData;&#xD;
import java.sql.PreparedStatement;&#xD;
import java.sql.SQLException;&#xD;
import java.util.ArrayList;&#xD;
import java.util.Arrays;&#xD;
import java.util.Collections;&#xD;
import java.util.Enumeration;&#xD;
import java.util.HashMap;&#xD;
import java.util.List;&#xD;
import java.util.Map;&#xD;
&#xD;
public class ColumnInfo {&#xD;
&#xD;
	public String columnName = null;&#xD;
	public String columnSize = null;&#xD;
	public String columnPos = null;&#xD;
	public String workName = null;&#xD;
}</code>
    </actionCode>
    <actionCode id="_EZjDsMuVEeiPY-9-vFlpTA" isBeginAction="false" name="clean end" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.EmptyActionCodeI">
      <link id="_H4ZwMMuVEeiPY-9-vFlpTA" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_ajugoAPrEeeXGsaiRn-7yQ"/>
    </actionCode>
    <actionCode id="_FDRWIMuVEeiPY-9-vFlpTA" generationCondition="'${fileFormatMode}$' = 'dynamic'" isBeginAction="false" name="columns calculation end" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.EmptyActionCodeI">
      <link id="_Ic8AoMuVEeiPY-9-vFlpTA" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_ajugoAPrEeeXGsaiRn-7yQ"/>
    </actionCode>
    <actionCode id="_NwryMMuVEeiPY-9-vFlpTA" generationCondition="$REF/tech:sourceRef()/tech:type() = 'D'" isBeginAction="false" name="Delimited" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.EmptyActionCodeI">
      <link id="_RV8BoMuVEeiPY-9-vFlpTA" generationCondition="" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_kcicQFHLEeG84sZpNLPURw"/>
      <link id="_SXx5IMuVEeiPY-9-vFlpTA" generationCondition="" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_SFSa8MuVEeiPY-9-vFlpTA"/>
    </actionCode>
    <actionCode id="_OvsYIMuVEeiPY-9-vFlpTA" generationCondition="$REF/tech:sourceRef()/tech:type() = 'P'" isBeginAction="false" name="Positional" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.EmptyActionCodeI">
      <link id="_RGc0IMuVEeiPY-9-vFlpTA" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_zdiWAI20EeOvofWmV6YwYg"/>
    </actionCode>
    <actionCode id="_SFSa8MuVEeiPY-9-vFlpTA" generationCondition="$REF/tech:sourceRef()/tech:type() = 'D' and '${fileFormatMethod}$' = 'from_file_dynamic'" isBeginAction="false" name="Delimited Format File - dynamic fields" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.WriteTxtFileActionCodeI">
      <link id="_SFSa8cuVEeiPY-9-vFlpTA" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_3Lp0EIY_EeqbH7dWmYjEeA"/>
      <parameter id="_SFSa8suVEeiPY-9-vFlpTA" description="Name of the file" name="TXT_WRITE_FILENAME" type="String" value="%x{concat($REF/tech:sourceRef()/tech:directoryRef()/tech:path(),'/',$REF/tech:sourceRef()/tech:name())}x%.fmt"/>
      <code>%x{md:paramValue($this,'loaderVersion')}x%&#xD;
%e(rhino){colCount=__ctx__.getVariableValue(&quot;../colCount&quot;);colCount;}e(rhino)%&#xD;
%e(rhino){&#xD;
	colList=__ctx__.getVariableValue(&quot;../colList&quot;);&#xD;
	colList;&#xD;
}e(rhino)%</code>
    </actionCode>
    <actionCode id="_mSlUgBTwEemJ-PVUNWIcUA" generationCondition="md:paramValue($this, 'loadMethod')= 'BCP'" enable="true" isBeginAction="false" name="BCP method" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.ScriptingActionCodeI">
      <parameter id="_mSlUgRTwEemJ-PVUNWIcUA" description="Scripting language (Rhino, Jython, etc.)" name="SCRIPTING_LANGUAGE" type="String" value="rhino"/>
      <code>importPackage(java.lang);&#xD;
importPackage(java.io);&#xD;
&#xD;
dataFilePath = &quot;%x{$REF/ref:source()/tech:filePath()}x%&quot;;&#xD;
/*Append line separator to the last line&#xD;
&#xD;
dataFile = new BufferedWriter(new FileWriter(dataFilePath, true));&#xD;
dataFile.append(&quot;%x{md:ifEmpty(md:paramValue($this,'recordSeparator'),'\r\n')}x%&quot;);&#xD;
dataFile.close(); */&#xD;
&#xD;
&#xD;
tempFolder = &quot;${/CORE_JAVA_TEMPORARY_FOLDER}$&quot;;&#xD;
command = new java.lang.String();&#xD;
osName=System.getProperty(&quot;os.name&quot;).toLowerCase();&#xD;
&#xD;
ii=0;&#xD;
args=new Array();&#xD;
&#xD;
if (osName.startsWith(&quot;win&quot;)) {&#xD;
  command = command + &quot;cmd.exe /c &quot;;&#xD;
  args[ii++]=&quot;cmd.exe&quot;;&#xD;
  args[ii++]=&quot;/c&quot;;&#xD;
}&#xD;
command = command + &quot;bcp  %x{md:physicalPath($REF,'workName')}x% IN \&quot;&quot; + dataFilePath + &quot;\&quot;&quot;;&#xD;
command = command + &quot; -c &quot;;&#xD;
if  ('%x{md:paramValue($this,'useTrustedConnection')}x%') {&#xD;
	command = command + &quot;-T &quot;;&#xD;
	}else{	&#xD;
		command = command + &quot;-U %x{$REF/ref:target()/tech:jdbcUser()}x% &quot;;&#xD;
	command = command + &quot;-P %x{$REF/ref:target()/tech:jdbcPassword()}x% &quot;; }&#xD;
command = command + &quot;-S \&quot;%x{replace($REF/ref:target()/tech:serverName(),&quot;\\&quot;,&quot;\\\\&quot;)}x%\&quot; &quot;;&#xD;
command = command + &quot;-t \&quot;%x{md:paramValue($this,'fieldSeparator')}x%\&quot; &quot;;&#xD;
command = command + &quot;-r \&quot;%x{md:ifEmpty(md:paramValue($this,'rowTerminator'),'\n')}x%\&quot; &quot;;&#xD;
%x{md:encloseIfNotEmpty(md:paramValue($this, 'maximumNumberOfErrors'), 'command = command + &quot;-m ', ' &quot;; ')}x%&#xD;
%x{md:encloseIfNotEmpty(md:paramValue($this, 'importBatchSize'), 'command = command + &quot;-b ', ' &quot;; ')}x%&#xD;
command=command + &quot;-f \&quot;%x{concat($REF/tech:sourceRef()/tech:directoryRef()/tech:path(),'/',$REF/tech:sourceRef()/tech:name())}x%.fmt\&quot;&quot;;&#xD;
&#xD;
command = command.replace(/\n/g, &quot;\\n&quot;);&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
args[ii++]=&quot;bcp&quot;;&#xD;
args[ii++]=&quot;%x{md:physicalPath($REF,'workName')}x%&quot;;&#xD;
args[ii++]=&quot;IN&quot;;&#xD;
args[ii++]=dataFilePath;&#xD;
args[ii++]=&quot;-c&quot;;&#xD;
&#xD;
if  ('%x{md:paramValue($this,'useTrustedConnection')}x%' == 'true') {&#xD;
	args[ii++]=&quot;-T&quot;;&#xD;
}else{&#xD;
	args[ii++]=&quot;-U&quot;;&#xD;
	args[ii++]=&quot;%x{$REF/ref:target()/tech:jdbcUser()}x%&quot;;&#xD;
	args[ii++]=&quot;-P&quot;;&#xD;
	args[ii++]=&quot;%x{$REF/ref:target()/tech:jdbcPassword()}x%&quot;;&#xD;
}&#xD;
args[ii++]=&quot;-S&quot;;&#xD;
args[ii++]=&quot;%x{replace($REF/ref:target()/tech:serverName(),&quot;\\&quot;,&quot;\\\\&quot;)}x%&quot;;&#xD;
args[ii++]=&quot;-t&quot;;&#xD;
args[ii++]=&quot;\&quot;%x{md:paramValue($this,'fieldSeparator')}x%\&quot;&quot;;&#xD;
args[ii++]=&quot;-r&quot;;&#xD;
args[ii++]=&quot;\&quot;%x{replace(md:ifEmpty(md:paramValue($this,'rowTerminator'),'\n'),'\\n','\\\\n')}x%\&quot;&quot;;&#xD;
args[ii++]=&quot;-f&quot;;&#xD;
args[ii++]=&quot;%x{concat($REF/tech:sourceRef()/tech:directoryRef()/tech:path(),'/',$REF/tech:sourceRef()/tech:name())}x%.fmt&quot;;&#xD;
&#xD;
&#xD;
if  ('%x{md:paramValue($this,'maximumNumberOfErrors')}x%') {&#xD;
	args[ii++]=&quot;-m&quot;;&#xD;
	args[ii++]=&quot;%x{md:paramValue($this,'maximumNumberOfErrors')}x%&quot;;&#xD;
}&#xD;
&#xD;
if  ('%x{md:paramValue($this,'importBatchSize')}x%') {&#xD;
	args[ii++]=&quot;-b&quot;;&#xD;
	args[ii++]=&quot;%x{md:paramValue($this,'importBatchSize')}x%&quot;;&#xD;
}&#xD;
&#xD;
__ctx__.publishVariable(&quot;./BCP_ARGUMENTS&quot;,args, true);&#xD;
__ctx__.publishVariable(&quot;./BCP_COMMAND&quot;,command, true);&#xD;
&#xD;
var psr;&#xD;
try{&#xD;
osRuntime = Runtime.getRuntime();&#xD;
//osProc=osRuntime.exec(command, null, new File(tempFolder));&#xD;
osProc=osRuntime.exec(args, null, new File(tempFolder));&#xD;
&#xD;
_in = new java.lang.StringBuffer();&#xD;
_err = new java.lang.StringBuffer();&#xD;
&#xD;
psr=com.indy.engine.common.tools.ProcessWrapper.wrap(osProc);&#xD;
psr.setInputStringBuffer(_in,-1);&#xD;
psr.setErrorStringBuffer(_err,-1);&#xD;
ret=psr.waitFor();&#xD;
&#xD;
if (_err.length()>0){&#xD;
	__ctx__.publishVariable(&quot;./BCP_ERROR&quot;,_err.toString(), true);&#xD;
}&#xD;
&#xD;
&#xD;
if (_in.length()>0){&#xD;
	str_out = _in.toString();&#xD;
	__ctx__.publishVariable(&quot;./BCP_STDOUT&quot;,str_out, true);&#xD;
}&#xD;
&#xD;
if (ret!= 0) {&#xD;
	throw &quot;The SQL Server BCP utility raised an error.&quot;;&#xD;
}&#xD;
}finally{&#xD;
	if (psr!=null) {&#xD;
		psr.destroy();&#xD;
	}&#xD;
	if (str_out != null){&#xD;
		str_exp_label = new java.lang.String(&quot; lignes copi&quot;);&#xD;
		indexOfStart = str_out.lastIndexOf(&quot;\n&quot;,str_out.indexOf(str_exp_label))+1;&#xD;
		/*__ctx__.publishVariable(&quot;./IndexStart&quot;,str_out.lastIndexOf(&quot;\n&quot;,str_out.indexOf(str_exp_label))+2, true);*/&#xD;
		__ctx__.publishVariable(&quot;./SQL_NB_ROWS&quot;,str_out.slice(indexOfStart,str_out.indexOf(&quot; &quot;,indexOfStart)), &quot;Integer&quot;, true);&#xD;
	}&#xD;
&#xD;
}&#xD;
&#xD;
</code>
    </actionCode>
    <actionCode id="_Wa6zgBlqEemU3dBcazn2tQ" isBeginAction="false" name="load file" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.EmptyActionCodeI">
      <link id="_cKzugBlqEemU3dBcazn2tQ" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_mSlUgBTwEemJ-PVUNWIcUA"/>
      <link id="_ceZ_8BlqEemU3dBcazn2tQ" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_Iav23FFaEeGOorpBdKd57Q"/>
    </actionCode>
    <actionCode id="_pBBdQIMREeqYvuihwQGkqQ" generationCondition="'${successIfNoFile}$'='true'" isBeginAction="false" name="TestFile" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.FileWaitActionCodeI">
      <link id="_sZRLcIMREeqYvuihwQGkqQ" generationCondition="md:paramValue($this,'successIfNoFile') = 'true'" executionCondition="${TestFile/NB_FILES}$==1" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_Wa6zgBlqEemU3dBcazn2tQ"/>
      <link id="_oIak0IMSEeqYvuihwQGkqQ" generationCondition="md:paramValue($this,'successIfNoFile') != 'true'" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_Wa6zgBlqEemU3dBcazn2tQ"/>
      <link id="_vNg_QIMSEeqYvuihwQGkqQ" generationCondition="md:paramValue($this,'successIfNoFile') = 'true'" executionCondition="${TestFile/NB_FILES}$==0" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_spUkMIMSEeqYvuihwQGkqQ"/>
      <parameter id="_vAxZMIMREeqYvuihwQGkqQ" name="WAIT_FILE" type="String" value="%x{$REF/ref:source()/tech:filePath()}x%"/>
      <parameter id="_GYE20IMSEeqYvuihwQGkqQ" name="WAIT_FILE_TIMEOUT" type="Integer" value="0"/>
    </actionCode>
    <actionCode id="_spUkMIMSEeqYvuihwQGkqQ" isBeginAction="false" name="EndIfNoFile" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.EmptyActionCodeI"/>
    <actionCode id="_3Lp0EIY_EeqbH7dWmYjEeA" isBeginAction="false" name="CheckIfSourceFileExists" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.EmptyActionCodeI">
      <link id="_9NMfwIY_EeqbH7dWmYjEeA" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_pBBdQIMREeqYvuihwQGkqQ"/>
    </actionCode>
    <templateType>L-TP.RDBMS.LOADING</templateType>
    <xslVariable id="_MBGPFOYeEeG9Pb5NDOv1Zg" code="%xsl{&#xD;&#xA;&#xD;&#xA;&lt;xsl:variable name=&quot;srcTab&quot; select=&quot;$REF/ref:sources()[1]&quot;/>&#xD;&#xA;&lt;xsl:variable name=&quot;cols&quot; select=&quot;$REF/ref:columns()&quot;/>&#xD;&#xA;&lt;xsl:variable name=&quot;srcCols&quot; select=&quot;$cols[1]/ref:sources()[1]/../ref:fields()&quot;/>&#xD;&#xA;&lt;xsl:for-each select=&quot;$srcCols&quot;>&lt;xsl:sort select=&quot;number(@position)&quot; data-type=&quot;number&quot;/>&#xD;&#xA;&#x9;&lt;col>&#xD;&#xA;&#x9;&#x9;&lt;xsl:variable name=&quot;map&quot; select=&quot;$cols[ref:sources()[1]/@id=current()/@id]&quot;/>&#xD;&#xA;&#x9;&#x9;&lt;xsl:choose>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;xsl:when test=&quot;exists($map)&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:variable name=&quot;cur&quot; select=&quot;current()&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;xsl:for-each select=&quot;$REF/ref:columns()&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;xsl:choose>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;xsl:when test=&quot;$cur/@id=current()/ref:sources()[1]/@id&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;pos&quot;>&lt;xsl:value-of select=&quot;current()/position()&quot;/>&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:when>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;xsl:otherwise>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;pos&quot;>&lt;xsl:value-of select=&quot;-1&quot;/>&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:otherwise>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:choose>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:for-each>&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;isLast&quot;>&lt;xsl:value-of select=&quot;if (position()=last()) then 'true' else 'false'&quot;/>&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;line&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:value-of select=&quot;concat(current()/@position,'\tSQLCHAR\t0\t',current()/tech:size(),'\t&amp;quot;',current()/../tech:asciiFieldSeparator(),'&amp;quot;\t',position(),'\t',$map/tech:workName(),'\t&amp;quot;&amp;quot;')&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;lineBeg&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:value-of select=&quot;concat(current()/@position,'\tSQLCHAR\t0\t',current()/tech:size(),'\t&amp;quot;')&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;lineEnd&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:value-of select=&quot;concat('&amp;quot;\t',position(),'\t',$map/tech:workName(),'\t&amp;quot;&amp;quot;')&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;/xsl:when>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;xsl:otherwise>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;isLast&quot;>&lt;xsl:value-of select=&quot;if (position()=last()) then 'true' else 'false'&quot;/>&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;line&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:value-of select=&quot;concat(current()/@position,'\tSQLCHAR\t0\t',current()/tech:size(),'\t&amp;quot;',current()/../tech:asciiFieldSeparator(),'&amp;quot;\t',0,'\tFILLER\t&amp;quot;&amp;quot;')&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;lineBeg&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:value-of select=&quot;concat(current()/@position,'\tSQLCHAR\t0\t',current()/tech:size(),'\t&amp;quot;')&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;lineEnd&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:value-of select=&quot;'&amp;quot;\t0\tFILLER\t&amp;quot;&amp;quot;'&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;/xsl:otherwise>&#xD;&#xA;&#x9;&#x9;&lt;/xsl:choose>&#xD;&#xA;&#x9;&lt;/col>&#xD;&#xA;&lt;/xsl:for-each>&#xD;&#xA;}%" name="colsOldTest" type="xsl"/>
    <xslVariable id="_rzqcQOYzEeG9Pb5NDOv1Zg" code="$REF/ref:sources()[1]" name="sourceFile" type="xpath"/>
    <xslVariable id="_JZ130OexEeGa6tveMTkMOQ" code="%xsl{&#xD;&#xA;&#xD;&#xA;&lt;xsl:variable name=&quot;cols&quot; select=&quot;$REF/ref:columns()&quot;/>&#xD;&#xA;&lt;xsl:variable name=&quot;srcCols&quot; select=&quot;$cols[1]/ref:sources()[1]/../ref:fields()&quot;/>&#xD;&#xA;&#xD;&#xA;&lt;xsl:for-each select=&quot;$cols&quot;>&lt;xsl:sort select=&quot;number(@num)&quot; data-type=&quot;number&quot;/>&#xD;&#xA;&#x9;&lt;col>&#xD;&#xA;&#x9;&#x9;&lt;xsl:variable name=&quot;map&quot; select=&quot;$srcCols[@id=current()/ref:sources()[1]/@id]&quot;/>&#xD;&#xA;&#x9;&#x9;&lt;xsl:choose>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;xsl:when test=&quot;exists($map)&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;id&quot;>&lt;xsl:value-of select=&quot;current()/ref:sources()[1]/@id&quot;/>&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;pos&quot;>&lt;xsl:value-of select=&quot;position()&quot;/>&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;workName&quot;>&lt;xsl:value-of select=&quot;tech:workName()&quot;/>&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;/xsl:when>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;xsl:otherwise>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;id&quot;>&lt;xsl:value-of select=&quot;current()/ref:sources()[1]/@id&quot;/>&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;pos&quot;>&lt;xsl:value-of select=&quot;-1&quot;/>&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;workName&quot;>&lt;xsl:value-of select=&quot;tech:workName()&quot;/>&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;/xsl:otherwise>&#xD;&#xA;&#x9;&#x9;&lt;/xsl:choose>&#xD;&#xA;&#x9;&lt;/col>&#xD;&#xA;&lt;/xsl:for-each>&#xD;&#xA;}%" name="mapCols" type="xsl"/>
    <xslVariable id="__momcOeyEeGa6tveMTkMOQ" code="%xsl{&#xD;&#xA;&lt;xsl:variable name=&quot;cols&quot; select=&quot;$mapCols/col&quot;/>&#xD;&#xA;&lt;xsl:variable name=&quot;srcCols&quot; select=&quot;$REF/ref:columns()[1]/ref:sources()[1]/../ref:fields()&quot;/>&#xD;&#xA;&lt;xsl:for-each select=&quot;$srcCols&quot;>&lt;xsl:sort select=&quot;number(@position)&quot; data-type=&quot;number&quot;/>&#xD;&#xA;&#x9;&lt;col>&#xD;&#xA;&#x9;&#x9;&lt;xsl:attribute name=&quot;myTest&quot;>&lt;xsl:value-of select=&quot;current()/@id&quot;/>&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&lt;xsl:variable name=&quot;map&quot; select=&quot;$cols[@id=current()/@id]&quot;/>&#xD;&#xA;&#x9;&#x9;&lt;xsl:choose>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;xsl:when test=&quot;exists($map)&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;position&quot;>&lt;xsl:value-of select=&quot;$map/@pos&quot;/>&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;size&quot;>&lt;xsl:value-of select=&quot;current()/tech:size()&quot;/>&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;workName&quot;>&lt;xsl:value-of select=&quot;$map/@workName&quot;/>&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;physicalName&quot;>&lt;xsl:value-of select=&quot;current()/tech:name()&quot;/>&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;isLast&quot;>&lt;xsl:value-of select=&quot;if (position()=last()) then 'true' else 'false'&quot;/>&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;lineDelim&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:value-of select=&quot;concat(current()/@position,'\tSQLCHAR\t0\t',current()/tech:size(),'\t&amp;quot;','___FIELD_SEP___','&amp;quot;\t',$map/@pos,'\t',$map/@workName,'\t&amp;quot;&amp;quot;')&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;linePos&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:value-of select=&quot;concat(position(),'\tSQLCHAR\t0\t',current()/tech:size(),'\t&amp;quot;','&amp;quot;\t',$map/@pos,'\t',$map/@workName,'\t&amp;quot;&amp;quot;')&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;lineBegPos&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:value-of select=&quot;concat(position(),'\tSQLCHAR\t0\t',current()/tech:size(),'\t&amp;quot;')&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;lineEnd&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:value-of select=&quot;concat('&amp;quot;\t',$map/@pos,'\t',$map/@workName,'\t&amp;quot;&amp;quot;')&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;lineBegDelim&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:value-of select=&quot;concat(current()/@position,'\tSQLCHAR\t0\t',current()/tech:size(),'\t&amp;quot;')&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;/xsl:when>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;xsl:otherwise>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;filler&quot;>&lt;xsl:value-of select=&quot;true&quot;/>&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;isLast&quot;>&lt;xsl:value-of select=&quot;if (position()=last()) then 'true' else 'false'&quot;/>&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;lineDelim&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:value-of select=&quot;concat(current()/@position,'\tSQLCHAR\t0\t',current()/tech:size(),'\t&amp;quot;','___FIELD_SEP___','&amp;quot;\t',0,'\tFILLER\t&amp;quot;&amp;quot;')&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;linePos&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:value-of select=&quot;concat(position(),'\tSQLCHAR\t0\t',current()/tech:size(),'\t&amp;quot;','&amp;quot;\t',0,'\tFILLER\t&amp;quot;&amp;quot;')&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;lineBegPos&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:value-of select=&quot;concat(position(),'\tSQLCHAR\t0\t',current()/tech:size(),'\t&amp;quot;')&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;lineEnd&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:value-of select=&quot;'&amp;quot;\t0\tFILLER\t&amp;quot;&amp;quot;'&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:attribute name=&quot;lineBegDelim&quot;>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;xsl:value-of select=&quot;concat(current()/@position,'\tSQLCHAR\t0\t',current()/tech:size(),'\t&amp;quot;')&quot;/>&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;/xsl:attribute>&#xD;&#xA;&#x9;&#x9;&#x9;&lt;/xsl:otherwise>&#xD;&#xA;&#x9;&#x9;&lt;/xsl:choose>&#xD;&#xA;&#x9;&lt;/col>&#xD;&#xA;&lt;/xsl:for-each>&#xD;&#xA;}%" name="cols" type="xsl"/>
    <xslVariable id="_UlX2QD1CEeavS9vb0P8LXQ" code="$REF/ref:columns()[1]/ref:sources()[1]/../ref:fields()/../tech:asciiFieldSeparator()" name="asciiFieldSeparator" type="xpath"/>
  </subProcess>
  <subProcess id="_46DJEFFZEeGOorpBdKd57Q" isBeginAction="false" name="Clean" nbCycles="-1" toleratedError="false">
    <actionCode id="__b66oFFZEeGOorpBdKd57Q" generationCondition="'${cleanTemporaryObjects}$'='true'" isBeginAction="false" name="Drop of load table" nbCycles="-1" toleratedError="true" technology="com.indy.engine.actionCodes.JdbcActionCodeI">
      <link id="__b66oVFZEeGOorpBdKd57Q" executionType="OK" generationType="OK_KO" mandatory="1"/>
      <link id="_joO-8FIiEeG5xLfi9jRPoA" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_i3A9YFIiEeG5xLfi9jRPoA"/>
      <parameter id="__b66olFZEeGOorpBdKd57Q" name="SQL_CONNECTION" type="String" value="%targetConnection{$REF}%"/>
      <parameter id="__b66o1FZEeGOorpBdKd57Q" name="SQL_ACTION_TYPE" type="String" value="DDL_DML"/>
      <parameter id="__b66pFFZEeGOorpBdKd57Q" name="SQL_TRANSACTION_TYPE" type="String" value="AUTOCOMMIT"/>
      <code>drop table %x{md:physicalPath($REF,'workName')}x%</code>
    </actionCode>
    <actionCode id="_i3A9YFIiEeG5xLfi9jRPoA" generationCondition="'${cleanTemporaryObjects}$'='true'" isBeginAction="false" name="FileDelete" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.FileDeleteActionCodeI">
      <parameter id="_nAgiUFIiEeG5xLfi9jRPoA" name="DEL_FILE" type="String" value="%x{concat($REF/tech:sourceRef()/tech:directoryRef()/tech:path(),'/',$REF/tech:sourceRef()/tech:name())}x%.fmt"/>
    </actionCode>
    <templateType>L-TP.RDBMS.CLEANING</templateType>
  </subProcess>
  <templateType>L-TP.RDBMS</templateType>
</proc:process>