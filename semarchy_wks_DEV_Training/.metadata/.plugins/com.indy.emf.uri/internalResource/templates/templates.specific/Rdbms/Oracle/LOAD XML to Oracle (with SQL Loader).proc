<?xml version="1.0" encoding="UTF-8"?>
<proc:process xmlns:proc="http://www.example.org/proc" id="_7EncwpiHEeeNWuw44hbC5g" description="This template is used to load one or more XML files into Oracle using SQL*Loader.&#xD;&#xA;Source XML data is first exported to temporary file(s), which are then loaded into Oracle using SQL*Loader.&#xD;&#xA;&#xD;&#xA;The Runtime must be located on a place where SQL loader utility is available.&#xD;&#xA;&#xD;&#xA;Refer to the description of each Parameter for more information.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;History:&#xD;&#xA;05/06/2020&#x9;use TIMESTAMP type in the ctl file for the timestamp columns&#xD;&#xA;05/06/2020&#x9;export boolean as number &#xD;&#xA;30/01/2019&#x9;Initialize template history&#xD;&#xA;" enable="true" isBeginAction="false" nbCycles="-1" toleratedError="false">
  <parameter id="_7Encx5iHEeeNWuw44hbC5g" description="If true, dupplicated source rows will be filtered." name="useDistinct" type="Boolean" value="false"/>
  <parameter id="_7Encw5iHEeeNWuw44hbC5g" description="If true, the temporary objects created during the load are removed at the end of the process." name="cleanTemporaryObjects" type="Boolean" value="true"/>
  <parameter id="_2GbrsJisEeeNWuw44hbC5g" description="Defines if the Oracle 'DIRECT' option should be used when loading source data with SQL*Loader.&#xD;&#xA;&#xD;&#xA;This provides better performance but requires that the file containing source data is located on the same server as the Database.&#xD;&#xA;&#xD;&#xA;If true, the direct option is used, allowing SQL Loader to perform a direct path load.&#xD;&#xA;If false, the direct option is not used. SQL Loader will then perform a conventional path load.&#xD;&#xA;&#xD;&#xA;Please refer to the Oracle documentation for more information." name="useDirectOption" type="Boolean" value="true"/>
  <parameter id="_7EnczZiHEeeNWuw44hbC5g" description="When this option is set to true, empty records are filtered out of the data flow." name="filterEmptyRecords" type="Boolean" value="true"/>
  <parameter id="_2GA08JisEeeNWuw44hbC5g" description="Defines if the Oracle parallel option must used when loading source data.&#xD;&#xA;&#xD;&#xA;If true, the parallel option is used.&#xD;&#xA;If false, the parallel option is not used.&#xD;&#xA;&#xD;&#xA;Please refer to the Oracle documentation for more information." metaInf="" name="useParallelOption" type="Boolean" value="false"/>
  <parameter id="_7Enc0ZiHEeeNWuw44hbC5g" name="successIfNoFile" type="Boolean" value="false"/>
  <parameter id="_7EnczJiHEeeNWuw44hbC5g" description="If true, the operations on the load tables will be executed through a transaction in NOCOMMIT mode.&#xD;&#xA;If false, the actions will be in AUTOCOMMIT mode." label="Transactional Mode On Work Tables" name="useTransactionOnWorkTables" type="Boolean" value="false"/>
  <parameter id="_7Enc1ZiHEeeNWuw44hbC5g" name="extractBase64BinaryToFile" type="Boolean" value="false"/>
  <parameter id="_7Ency5iHEeeNWuw44hbC5g" description="Defines a custom file path when it differs from the one defined in Metadata.&#xD;&#xA;Otherwise you can leave this empty, file's path defined in source XML file is used automatically." name="inFileName" type="String"/>
  <parameter id="_YbmMUCSjEem_pYiqN3cLng" description="Source XML files encoding.&#xD;&#xA;&#xD;&#xA;This corresponds to the encoding of source xml files and will be used when reading them while exporting to temporary files.&#xD;&#xA;&#xD;&#xA;Note that exported temporary files will not use this encoding which is only used for reading source xml files.&#xD;&#xA;Temporary files are created by the Template in UTF-8 and loaded into Oracle using UTF-8." name="inFileEncoding" type="String" value=""/>
  <parameter id="_7Enc2JiHEeeNWuw44hbC5g" description="Character to use to separate the records in the temporary files." name="recordSeparator" type="String" value="\n"/>
  <parameter id="_7EncxJiHEeeNWuw44hbC5g" description="ASCII field separator used to separate the fields in exported temporary files." name="fieldSeparator" type="String" value="~"/>
  <parameter id="_7Enc2piHEeeNWuw44hbC5g" description="Character used to enclose character data in the temporary files." name="stringDelimiter" type="String" value=""/>
  <parameter id="_7EncyZiHEeeNWuw44hbC5g" description="Specify a keyword that will replace NULL values coming from source XML files.&#xD;&#xA;&#xD;&#xA;When extracting source data into temporary files, this keyword will be written instead of NULL values in the file." name="nullValueReplacement" type="String" value=""/>
  <parameter id="_Qw2f4JitEeeNWuw44hbC5g" description="Maximum number of errors allowed." name="errorsOption" type="String" value="0"/>
  <parameter id="_2GbrsZisEeeNWuw44hbC5g" description="Maximum number of discarded records allowed." name="discardmax" type="String" value="1"/>
  <parameter id="_7Enc3ZiHEeeNWuw44hbC5g" description="Used to specify options on the load table. They are added at the end of the create table statement." name="loadTableOptions" type="String" value=""/>
  <parameter id="_7Enc3piHEeeNWuw44hbC5g" description="Number threads generating temporary files.&#xD;&#xA;When multiple XML files are loaded, it is possible to process the various files in different threads for better performance. Each thread will generate its own set of temporary files which will be loaded with SQL*Loader." name="nbWriter" type="Integer" value="1"/>
  <parameter id="_7Enc4JiHEeeNWuw44hbC5g" name="splitNbElement" type="Integer" value="1"/>
  <parameter id="_7Enc35iHEeeNWuw44hbC5g" name="splitPath" type="String" value=""/>
  <parameter id="_7Enc05iHEeeNWuw44hbC5g" description="Name of the transaction when Transaction Mode is set to true." name="transactionName" type="String" value="T1"/>
  <parameter id="_wdJH8JisEeeNWuw44hbC5g" description="This parameter defines:&#xD;&#xA;&#xD;&#xA;- The JDBC Fetch size (number of lines) used when querying the source database.&#xD;&#xA;Larger values provide better performance but consume more memory in the Runtime as the data is stored in the Memory before being sent to the Load table.&#xD;&#xA;&#xD;&#xA;- The value of the ROWS option used in the CTL file (in SQL Loader Mode).&#xD;&#xA;This option specifies the number of rows to treat for each batch.&#xD;&#xA;" name="fetchSize" type="String" value="30000"/>
  <parameter id="_7Enc1piHEeeNWuw44hbC5g" name="sqlBatchSize" type="String" value="1000"/>
  <parameter id="_7Enc1JiHEeeNWuw44hbC5g" name="errorDir" type="String" value=""/>
  <parameter id="_7Enc0piHEeeNWuw44hbC5g" description="" name="base64BinariesExtractDirectory" type="String" value=""/>
  <parameter id="_7EncxpiHEeeNWuw44hbC5g" description="Directory in which the temporary files generated during the load are stored.&#xD;&#xA;Note that the Runtime must have access to it." name="workFolder" type="String" value="${/CORE_JAVA_TEMPORARY_FOLDER}$"/>
  <subProcess id="_7Enc4ZiHEeeNWuw44hbC5g" name="Load">
    <link id="_7Enc4piHEeeNWuw44hbC5g" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_7Enc_JiHEeeNWuw44hbC5g?fileId=_7EncwpiHEeeNWuw44hbC5g$type=proc$name=Clean?"/>
    <parameter id="_7Enc45iHEeeNWuw44hbC5g" name="realPathOnServer" type="String" value="%x{ &#xD;&#xA;if (not(exists($xslTargetFtp) and md:paramValue($this,'enableFileTransport')='true'))&#xD;&#xA;&#x9;then md:paramValue($this,'workFolder')&#xD;&#xA; &#x9;else md:ifEmpty(md:paramValue($this,'pathOnServer'),$xslTargetFtp/tech:systemPath())&#xD;&#xA;}x%"/>
    <actionCode id="_7Enc5JiHEeeNWuw44hbC5g" generationCondition="" isBeginAction="false" name="Delete data files" nbCycles="-1" toleratedError="true" technology="com.indy.engine.actionCodes.FileDeleteActionCodeI">
      <link id="_7Enc5ZiHEeeNWuw44hbC5g" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_7Enc6JiHEeeNWuw44hbC5g"/>
      <parameter id="_7Enc5piHEeeNWuw44hbC5g" name="DEL_DIR" type="String" value="${../realPathOnServer}$"/>
      <parameter id="_7Enc55iHEeeNWuw44hbC5g" name="DEL_INCLUDES" type="String" value="data_%x{$REF/tech:workName()}x%_*/*.dat"/>
    </actionCode>
    <actionProcessRef id="_7Enc6JiHEeeNWuw44hbC5g" isBeginAction="false" name="Unload" nbCycles="-1" toleratedError="false" targetName="../../../templates.generic/templates.generic/Xml/LOAD%20Xml%20to%20Rdbms.proc#_MWINkLyHEd6Ias_QQeWoUQ?fileId=_eNVMMrdDEd6wPMNq-9tkHw$type=proc$name=Load?">
      <link id="_7Enc6ZiHEeeNWuw44hbC5g" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_7Enc65iHEeeNWuw44hbC5g?fileId=_7EncwpiHEeeNWuw44hbC5g$type=proc$name=Load?"/>
      <parameter id="_7Enc6piHEeeNWuw44hbC5g" metaInf="" name="fileExportProperties" type="String" value="enable=true&#xD;&#xA;fileMask=%x{md:paramValue($this,'workFolder')}x%/data_[objectName]/[threadId].dat&#xD;&#xA;fileFormat=delimited&#xD;&#xA;timestampFormat=yyyy/MM/dd HH:mm:ss.SSS&#xD;&#xA;dateFormat=yyyy/MM/dd HH:mm:ss.SSS&#xD;&#xA;#TODO&#xD;&#xA;#timeFormat=&#xD;&#xA;booleanAsNumeric=true&#xD;&#xA;#addRecordNumber=false&#xD;&#xA;#TODO: support ASCII delimiters in order to specify 0x07 and 0x08 to have bullet-proof delimiters on any technology&#xD;&#xA;fieldSeparator=%x{md:paramValue($this,'fieldSeparator')}x%&#xD;&#xA;nullValueReplacement=%x{md:paramValue($this,'nullValueReplacement')}x%&#xD;&#xA;numericDecimalSeparator=%x{md:paramValue($this,'numericSeparator')}x%&#xD;&#xA;rowSep=%x{md:ifEmpty(md:paramValue($this,'recordSeparator'),'\n')}x%&#xD;&#xA;#localeLanguage=&#xD;&#xA;#numericPadChar=&#xD;&#xA;numericGroupingSeparator=&#xD;&#xA;#stringPadChar=&#xD;&#xA;stringDelimiter=%x{md:paramValue($this,'stringDelimiter')}x%&#xD;&#xA;#stringDelimiterReplacement&#xD;&#xA;fileEncoding=UTF-8&#xD;&#xA;"/>
    </actionProcessRef>
    <subProcess id="_7Enc65iHEeeNWuw44hbC5g" isBeginAction="false" name="Load" nbCycles="-1" repetitionMode="Sequential" repetitionQuery="$fields//datastore" repetitionVariableName="datastore" toleratedError="false">
      <actionCode id="_7Enc8piHEeeNWuw44hbC5g" enable="true" isBeginAction="false" name="FileWait" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.FileWaitActionCodeI">
        <bindLink id="_7Enc85iHEeeNWuw44hbC5g" bindType="DirectBind" targetId="_dS1MAJioEeeNWuw44hbC5g"/>
        <parameter id="_7Enc9JiHEeeNWuw44hbC5g" name="WAIT_FILE_DIR" type="String" value="${../../realPathOnServer}$/data_%x{$datastore/@workName}x%"/>
        <parameter id="_7Enc9ZiHEeeNWuw44hbC5g" name="WAIT_FILE_INCLUDES" type="String" value="*.dat"/>
        <parameter id="_7Enc9piHEeeNWuw44hbC5g" name="WAIT_FILE_NB_FILES" type="Integer" value="%x{md:paramValue($this,'nbWriter')}x%"/>
        <parameter id="_7Enc95iHEeeNWuw44hbC5g" name="WAIT_FILE_TIMEOUT" type="Integer" value="2"/>
        <parameter id="_7Enc-JiHEeeNWuw44hbC5g" name="WAIT_FILE_POLLINT" type="Integer" value="1"/>
      </actionCode>
      <actionCode id="_pVfiEJinEeeNWuw44hbC5g" enable="true" isBeginAction="false" name="SQL Loader call" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.ScriptingActionCodeI">
        <parameter id="_pVfiE5inEeeNWuw44hbC5g" name="SCRIPTING_LANGUAGE" type="String" value="rhino"/>
        <parameter id="_gKyG8JlgEee_HtpafT3W1g" name="SCRIPTING_CONNECTION" type="String" value="%x{$this/../@id}x%"/>
        <code>importPackage(java.lang);&#xD;
importPackage(java.io);&#xD;
&#xD;
command = &quot;sqlldr control='&quot;+ __ctx__.getVariableValue(&quot;../../realPathOnServer&quot;)  + &quot;/data_%x{$datastore/@workName}x%.ctl' log='&quot;+ __ctx__.getVariableValue(&quot;../../realPathOnServer&quot;)  + &quot;/data_%x{$datastore/@workName}x%.log' userid=%x{$REF/ref:target()/tech:jdbcUser()}x%/%x{$REF/ref:target()/tech:jdbcPassword()}x%@%x{$REF/ref:target()/tech:serverName()}x%&quot;;&#xD;
command =  command.replace(&quot;/\\/g&quot;,&quot;/&quot;);&#xD;
	&#xD;
try {&#xD;
	osRuntime = Runtime.getRuntime();&#xD;
	osProc = osRuntime.exec(command);&#xD;
	&#xD;
	_in = new java.lang.StringBuffer();&#xD;
	_err = new java.lang.StringBuffer();&#xD;
&#xD;
	psr=com.indy.engine.common.tools.ProcessWrapper.wrap(osProc);&#xD;
	psr.setInputStringBuffer(_in,-1);&#xD;
	psr.setErrorStringBuffer(_err,-1);&#xD;
	ret=psr.waitFor();&#xD;
		&#xD;
	if(ret != 0){&#xD;
		throw new Exception(&quot;Error when calling SQL*Loader.  See log '&quot;+ __ctx__.getVariableValue(&quot;../realPathOnServer&quot;).replaceAll(&quot;\\\\&quot;,&quot;/&quot;)  + &quot;/data_%x{$datastore/@workName}x%.log' for more details...&quot;);&#xD;
	}&#xD;
&#xD;
}&#xD;
catch(e){&#xD;
	throw e;&#xD;
}&#xD;
finally{&#xD;
	if (typeof psr !== 'undefined') {&#xD;
		if (psr != null){&#xD;
			psr.destroy();&#xD;
		}&#xD;
	}&#xD;
}</code>
      </actionCode>
      <actionCode id="_pV3VgJinEeeNWuw44hbC5g" generationCondition="" enable="true" isBeginAction="false" name="Generation of the CTL file" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.WriteTxtFileActionCodeI">
        <link id="_pV3VgpinEeeNWuw44hbC5g" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_pVfiEJinEeeNWuw44hbC5g"/>
        <parameter id="_pV3VhJinEeeNWuw44hbC5g" name="TXT_WRITE_FILENAME" type="String" value="${../../realPathOnServer}$/data_%x{$datastore/@workName}x%.ctl"/>
        <code>OPTIONS (&#xD;
	SKIP			=0,&#xD;
	ERRORS			=%x{md:paramValue($this,'errorsOption')}x%,&#xD;
	DIRECT			=%x{ if (md:paramValue($this,'useDirectOption') = 'true') then 'TRUE' else 'FALSE'}x%,&#xD;
	PARALLEL		=%x{ if (md:paramValue($this,'useParallelOption') = 'true') then 'TRUE' else 'FALSE'}x%&#xD;
	%x{ if(md:paramValue($this, 'useDirectOption') = 'true' and md:paramValue($this, 'useParallelOption') = 'true') then '' else concat(',ROWS			=',md:paramValue($this,'fetchSize'))}x%&#xD;
	)&#xD;
LOAD DATA&#xD;
CHARACTERSET 'UTF8'&#xD;
${../listFile}$&#xD;
DISCARDMAX		%x{md:paramValue($this,'discardmax')}x%&#xD;
APPEND&#xD;
INTO TABLE %x{$datastore/@physicalName}x%&#xD;
FIELDS TERMINATED BY '%x{md:paramValue($this,'fieldSeparator')}x%' %x{if (md:paramValue($this,'stringDelimiter')!='') then concat('OPTIONALLY ENCLOSED BY ''',md:paramValue($this,'stringDelimiter'),'''') else '' }x%&#xD;
TRAILING NULLCOLS&#xD;
(&#xD;
%x{md:list($datastore/field/concat(workName,if(targetWritableType='DATE') then concat('	DATE ''',$REF/ref:target()/tech:convertJavaTimestamp('yyyy/MM/dd HH:mm:ss.SSS'),'''') else if(starts-with(targetWritableType,'TIMESTAMP')) then concat('	TIMESTAMP ''',$REF/ref:target()/tech:convertJavaTimestamp('yyyy/MM/dd HH:mm:ss.SSS'),'''') else ''),',\n\t')}x%&#xD;
)&#xD;
&#xD;
&#xD;
&#xD;
</code>
      </actionCode>
      <actionCode id="_dS1MAJioEeeNWuw44hbC5g" isBeginAction="false" name="File listfiles" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.ScriptingActionCodeI">
        <link id="_tJdtgJioEeeNWuw44hbC5g" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_try-gJioEeeNWuw44hbC5g"/>
        <parameter id="_dUJaoJioEeeNWuw44hbC5g" name="SCRIPTING_LANGUAGE" type="String" value="rhino"/>
        <parameter id="_epRQ4JlgEee_HtpafT3W1g" name="SCRIPTING_CONNECTION" type="String" value="%x{$this/../@id}x%"/>
        <code>listFile+=&quot;INFILE \&quot;${../../realPathOnServer}$/data_%x{$datastore/@workName}x%/:{FILE_NAME}:\&quot;\n&quot;;&#xD;
listFile+=&quot;BADFILE \&quot;${../../realPathOnServer}$/data_%x{$datastore/@workName}x%/:{FILE_NAME}:.bad\&quot;\n&quot;;&#xD;
listFile+=&quot;DISCARDFILE \&quot;${../../realPathOnServer}$/data_%x{$datastore/@workName}x%/:{FILE_NAME}:.dsc\&quot;\n&quot;;</code>
      </actionCode>
      <actionCode id="_fvro8JioEeeNWuw44hbC5g" isBeginAction="false" name="init listFiles" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.ScriptingActionCodeI">
        <link id="_gdAB8JioEeeNWuw44hbC5g" executionCondition="" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_dS1MAJioEeeNWuw44hbC5g"/>
        <parameter id="_fvs3EJioEeeNWuw44hbC5g" name="SCRIPTING_LANGUAGE" type="String" value="rhino"/>
        <parameter id="_b8oEcJlgEee_HtpafT3W1g" name="SCRIPTING_CONNECTION" type="String" value="%x{$this/../@id}x%"/>
        <code>var listFile=&quot;&quot;;</code>
      </actionCode>
      <actionCode id="_try-gJioEeeNWuw44hbC5g" isBeginAction="false" name="Publish listFiles" nbCycles="-1" toleratedError="false" technology="com.indy.engine.actionCodes.ScriptingActionCodeI">
        <link id="_zZZagJioEeeNWuw44hbC5g" executionType="OK" generationType="OK_KO" mandatory="1" targetId="_pV3VgJinEeeNWuw44hbC5g"/>
        <parameter id="_trzlkJioEeeNWuw44hbC5g" name="SCRIPTING_LANGUAGE" type="String" value="rhino"/>
        <parameter id="_e8V94JlgEee_HtpafT3W1g" name="SCRIPTING_CONNECTION" type="String" value="%x{$this/../@id}x%"/>
        <code>__ctx__.publishVariable(&quot;../listFile&quot;,listFile);</code>
      </actionCode>
    </subProcess>
    <templateType>L-TP.RDBMS.LOADING</templateType>
    <xslVariable id="_7Enc-ZiHEeeNWuw44hbC5g" code="$REF/ref:target()/mdj:xpath('$TARGET_FTP')" name="xslTargetFtp" type="xpath"/>
  </subProcess>
  <subProcess id="_7Enc_JiHEeeNWuw44hbC5g" isBeginAction="false" name="Clean" nbCycles="-1" toleratedError="false">
    <parameter id="_7Enc_ZiHEeeNWuw44hbC5g" name="realPathOnServer" type="String" value="%x{ &#xD;&#xA;if (not(exists($xslTargetFtp) and md:paramValue($this,'enableFileTransport')='true'))&#xD;&#xA;&#x9;then md:paramValue($this,'workFolder')&#xD;&#xA; &#x9;else md:ifEmpty(md:paramValue($this,'pathOnServer'),$xslTargetFtp/tech:systemPath())&#xD;&#xA;}x%"/>
    <actionCode id="_7Enc_piHEeeNWuw44hbC5g" generationCondition="'${cleanTemporaryObjects}$'='true'" enable="true" isBeginAction="false" name="FileDelete" nbCycles="-1" toleratedError="true" technology="com.indy.engine.actionCodes.FileDeleteActionCodeI">
      <parameter id="_7Enc_5iHEeeNWuw44hbC5g" name="DEL_DIR" type="String" value="%x{md:paramValue($this,'workFolder')}x%"/>
      <parameter id="_7EndAJiHEeeNWuw44hbC5g" name="DEL_INCLUDES" type="String" value="data_%x{$REF/tech:workName()}x%_*/**"/>
    </actionCode>
    <actionProcessRef id="_7EndAZiHEeeNWuw44hbC5g" isBeginAction="false" name="Clean" nbCycles="-1" toleratedError="false" targetName="../../../templates.generic/templates.generic/Xml/LOAD%20Xml%20to%20Rdbms.proc#_T9luMLyHEd6Ias_QQeWoUQ?fileId=_eNVMMrdDEd6wPMNq-9tkHw$type=proc$name=Clean?"/>
    <templateType>L-TP.RDBMS.CLEANING</templateType>
    <xslVariable id="_7EndApiHEeeNWuw44hbC5g" code="$REF/ref:target()/mdj:xpath('$TARGET_FTP')" name="xslTargetFtp" type="xpath"/>
  </subProcess>
  <templateType>L-TP.RDBMS</templateType>
</proc:process>