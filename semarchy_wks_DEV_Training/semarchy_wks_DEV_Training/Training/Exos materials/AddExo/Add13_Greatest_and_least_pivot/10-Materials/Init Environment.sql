DROP SCHEMA SALE_RESULT IF EXISTS CASCADE;
CREATE SCHEMA SALES;
CREATE TABLE SALES.DAILY_RESULT (
RESULT_DATE  TIMESTAMP NOT NULL,
RESULT_SALESMAN1 INTEGER,
RESULT_SALESMAN2 INTEGER,
RESULT_SALESMAN3 INTEGER,
RESULT_SALESMAN4 INTEGER,
CONSTRAINT   PK_DAILY_RESULT PRIMARY KEY (RESULT_DATE));
CREATE TABLE SALES.SALE_FORCE
( 	SAL_ID INTEGER NOT NULL,
	SAL_GENDER VARCHAR(8) ,
	SAL_LASTNAME VARCHAR(32) NOT NULL,
	SAL_FIRSTNAME VARCHAR(25),
	SAL_GEN_FILE_TYPE VARCHAR(4),
	CONSTRAINT PK_T_SALES_PERSON PRIMARY KEY (SAL_ID));
CREATE TABLE SALES.CUSTOMERS
(	
	CUS_ID INTEGER NOT NULL,
	TIT_CODE VARCHAR(8) ,
	CUS_LAST_NAME VARCHAR(32) NOT NULL,
	CUS_FIRST_NAME VARCHAR(25) ,
	CUS_COMPANY VARCHAR(100) ,
	CUS_BIRTH_DATE TIMESTAMP ,
	SAL_ID INTEGER,
	, CONSTRAINT PK_CUSTOMERS PRIMARY KEY (CUS_ID))

INSERT INTO  SALES.DAILY_RESULT 
SELECT TO_TIMESTAMP(LPAD(gen_days,2,'0')+'/01/'+YEAR(CURRENT_TIMESTAMP) ,'DD/MM/YYYY') AS RESULT_DATE,
       CAST(RAND()*50 AS INTEGER) AS RESULT_SALESMAN1,
       CAST(RAND()*50 AS INTEGER) AS RESULT_SALESMAN2,
       CAST(RAND()*50 AS INTEGER) AS RESULT_SALESMAN3,
       CAST(RAND()*50 AS INTEGER) AS RESULT_SALESMAN4
FROM   UNNEST(SEQUENCE_ARRAY(1, 31, 1)) AS GENERATE_SERIES(GEN_DAYS);

INSERT INTO SALES.SALE_FORCE VALUES (1,'M','SCHMIDT','Alexander','XML');
INSERT INTO SALES.SALE_FORCE VALUES (2,'M','JONES','Hales','XML');
INSERT INTO SALES.SALE_FORCE VALUES (3,'F','ARKET','Rosa','JSON');
INSERT INTO SALES.SALE_FORCE VALUES (4,'F','FITZ','Alice','JSON');

INSERT INTO SALES.CUSTOMERS	
SELECT CUS_ID,TIT_CODE,CUS_LAST_NAME,CUS_FIRST_NAME,CUS_COMPANY,CUS_BIRTH_DATE,CAST(RAND()*4 AS INTEGER)+1 AS SAL_ID FROM HOTEL_MANAGEMENT.T_CUSTOMER