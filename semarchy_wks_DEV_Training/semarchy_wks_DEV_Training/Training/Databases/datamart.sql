DROP SCHEMA IF EXISTS hotel_datamart CASCADE;
DROP SCHEMA IF EXISTS work_dm CASCADE;
DROP SCHEMA IF EXISTS denormalized_dm CASCADE;
DROP SCHEMA IF EXISTS ods CASCADE;
CREATE SCHEMA IF NOT EXISTS hotel_datamart AUTHORIZATION postgres;
CREATE SCHEMA IF NOT EXISTS work_dm AUTHORIZATION postgres;
CREATE SCHEMA IF NOT EXISTS denormalized_dm AUTHORIZATION postgres;
CREATE SCHEMA IF NOT EXISTS ods AUTHORIZATION postgres;
CREATE TABLE ods.ods_banished_customer (id_ban_customer INTEGER NOT NULL,CONSTRAINT pk_banished_customer PRIMARY KEY (id_ban_customer));
CREATE TABLE ods.ods_customer (id_customer INTEGER NOT NULL,CONSTRAINT pk_customer PRIMARY KEY (id_customer));
CREATE TABLE denormalized_dm.dim_customer_man (cus_id INTEGER NOT NULL,cus_title VARCHAR(32),cus_name VARCHAR(100) NOT NULL,cus_company VARCHAR(100),CONSTRAINT pk_dim_customer_man PRIMARY KEY (cus_id));
CREATE TABLE denormalized_dm.dim_customer_woman (cus_id INTEGER NOT NULL,cus_title VARCHAR(32),cus_name VARCHAR(100) NOT NULL,cus_company VARCHAR(100),CONSTRAINT pk_dim_customer_woman PRIMARY KEY (cus_id));
CREATE SEQUENCE hotel_datamart.seq_geo_key_id START 1000;
CREATE TABLE hotel_datamart.dim_bedroom(bdr_id NUMERIC(10),bdr_number NUMERIC(4),bdr_floor NUMERIC(2),bdr_bath NUMERIC(1),bdr_shower NUMERIC(1),bdr_bar NUMERIC(1),bdr_bed_count NUMERIC(2),bdr_phone_number VARCHAR(3),bdr_type VARCHAR(30),update_date TIMESTAMP,CONSTRAINT pk_dim_bedroom PRIMARY KEY(bdr_id));
CREATE TABLE hotel_datamart.dim_discount(dis_range VARCHAR(35),dis_min NUMERIC(3),dis_max NUMERIC(3),CONSTRAINT pk_dim_discount PRIMARY KEY(dis_range));
CREATE TABLE hotel_datamart.dim_geography(geo_key_id NUMERIC(10),geo_zip_code VARCHAR(6),geo_city VARCHAR(50),geo_state_code VARCHAR(3),geo_state VARCHAR(50),CONSTRAINT pk_dim_geography PRIMARY KEY(geo_key_id));
CREATE INDEX idx_geo_zip_code ON hotel_datamart.dim_geography(geo_zip_code);
CREATE TABLE hotel_datamart.dim_bil_type(bil_type_code VARCHAR(4),bil_type_name VARCHAR(35),CONSTRAINT pk_dim_bil_type PRIMARY KEY(bil_type_code));
CREATE TABLE hotel_datamart.dim_payment_type(pmt_code VARCHAR(4),pmt_name VARCHAR(35),pmt_description VARCHAR(35),CONSTRAINT pk_dim_payment_type PRIMARY KEY(pmt_code));
CREATE TABLE hotel_datamart.dim_time(time_key_day VARCHAR(10) NOT NULL,time_date TIMESTAMP,time_month NUMERIC(2),time_quarter NUMERIC(1),time_year NUMERIC(4),CONSTRAINT pk_dim_time PRIMARY KEY(time_key_day));
CREATE INDEX ix_time_date ON hotel_datamart.dim_time(time_date);
CREATE TABLE hotel_datamart.dim_customer(cus_id INTEGER NOT NULL,cus_title VARCHAR(32),cus_name VARCHAR(100) NOT NULL,cus_company VARCHAR(100),geo_key_id NUMERIC(10),cus_vip NUMERIC(1),update_date TIMESTAMP,CONSTRAINT pk_dim_customer PRIMARY KEY(cus_id),CONSTRAINT fk_dim_customer_geo FOREIGN KEY(geo_key_id) REFERENCES hotel_datamart.dim_geography(geo_key_id));
CREATE INDEX idx_cus_geo_key_id ON hotel_datamart.dim_customer(geo_key_id);
CREATE TABLE hotel_datamart.fact_billing(bil_key_id SERIAL PRIMARY KEY,bil_id INTEGER,cus_id INTEGER,time_key_day VARCHAR(10),dis_range VARCHAR(35),pmt_code VARCHAR(4),bil_amount NUMERIC(10,2),bil_qty NUMERIC(10,2),update_date TIMESTAMP,CONSTRAINT fk_fact_billing_dis FOREIGN KEY(dis_range) REFERENCES hotel_datamart.dim_discount(dis_range),CONSTRAINT fk_fact_billing_cus FOREIGN KEY(cus_id) REFERENCES hotel_datamart.dim_customer(cus_id),CONSTRAINT fk_fact_billing_pmt FOREIGN KEY(pmt_code) REFERENCES hotel_datamart.dim_payment_type(pmt_code),CONSTRAINT fk_fact_billing_time foreign key(time_key_day) REFERENCES hotel_datamart.dim_time(time_key_day));
CREATE INDEX idx_bil_cus_id ON hotel_datamart.fact_billing(cus_id);
CREATE INDEX idx_bil_dis_range ON hotel_datamart.fact_billing(dis_range);
CREATE INDEX idx_bil_pmt_code ON hotel_datamart.fact_billing(pmt_code);
CREATE INDEX idx_bil_time_key_day ON hotel_datamart.fact_billing(time_key_day);
CREATE INDEX idx_range_and_id ON hotel_datamart.fact_billing(bil_id,dis_range);
CREATE TABLE hotel_datamart.fact_booking(bok_key_id SERIAL PRIMARY KEY,cus_id INTEGER,time_key_day VARCHAR(10),bdr_id NUMERIC(10),bok_people NUMERIC(10),bok_booked NUMERIC(1),update_date TIMESTAMP,CONSTRAINT fk_fact_booking_bdr FOREIGN KEY(bdr_id) REFERENCES hotel_datamart.dim_bedroom(bdr_id),CONSTRAINT fk_fact_booking_cus foreign key(cus_id) REFERENCES hotel_datamart.dim_customer(cus_id),CONSTRAINT fk_fact_booking_time foreign key(time_key_day) REFERENCES hotel_datamart.dim_time(time_key_day));
CREATE INDEX idx_bok_bdr_id ON hotel_datamart.fact_booking(bdr_id);
CREATE INDEX idx_bok_time_key_day ON hotel_datamart.fact_booking(time_key_day);
INSERT INTO hotel_datamart.dim_discount VALUES('no discount',NULL,NULL);
INSERT INTO hotel_datamart.dim_geography VALUES(0,NULL,'No Address',NULL,NULL);
INSERT INTO hotel_datamart.dim_geography VALUES(1,'?','Unknown Zip Code','?','?');
INSERT INTO ods.ods_banished_customer SELECT generate_series FROM generate_series(50, 99, 1);